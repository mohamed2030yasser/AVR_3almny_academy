
ATMEGA16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000138  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000406  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000406  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000d8  00000000  00000000  00000435  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000149c  00000000  00000000  0000050d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000008b1  00000000  00000000  000019a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000078c  00000000  00000000  0000225a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001a0  00000000  00000000  000029e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000200  00000000  00000000  00002b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000006c7  00000000  00000000  00002d88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000a8  00000000  00000000  0000344f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000003ae  000003ae  00000402  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000034f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.DIO_set_bit_dir 000000e0  00000138  00000138  0000018c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.DIO_write_bit 000000e0  00000218  00000218  0000026c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    00000030  00000352  00000352  000003a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.SPI_initialize_as_MASTER 0000005a  000002f8  000002f8  0000034c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.SPI_master_send_data 00000020  00000382  00000382  000003d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.libgcc  0000000c  000003a2  000003a2  000003f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
   8:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
   c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  10:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  14:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  18:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  1c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  20:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  24:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  28:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  2c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  30:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  34:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  38:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  3c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  40:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  44:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  48:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  4c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  50:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
  54:	a8 00       	.word	0x00a8	; ????
  56:	c1 00       	.word	0x00c1	; ????
  58:	da 00       	.word	0x00da	; ????
  5a:	f3 00       	.word	0x00f3	; ????
  5c:	0b 01       	movw	r0, r22
  5e:	0b 01       	movw	r0, r22
  60:	0b 01       	movw	r0, r22
  62:	0b 01       	movw	r0, r22
  64:	0b 01       	movw	r0, r22
  66:	0b 01       	movw	r0, r22
  68:	0b 01       	movw	r0, r22
  6a:	0b 01       	movw	r0, r22
  6c:	0b 01       	movw	r0, r22
  6e:	0b 01       	movw	r0, r22
  70:	0b 01       	movw	r0, r22
  72:	0b 01       	movw	r0, r22
  74:	0b 01       	movw	r0, r22
  76:	0b 01       	movw	r0, r22
  78:	0b 01       	movw	r0, r22
  7a:	0b 01       	movw	r0, r22
  7c:	0b 01       	movw	r0, r22
  7e:	0b 01       	movw	r0, r22
  80:	0b 01       	movw	r0, r22
  82:	0b 01       	movw	r0, r22
  84:	0b 01       	movw	r0, r22
  86:	0b 01       	movw	r0, r22
  88:	0b 01       	movw	r0, r22
  8a:	0b 01       	movw	r0, r22
  8c:	0b 01       	movw	r0, r22
  8e:	0b 01       	movw	r0, r22
  90:	0b 01       	movw	r0, r22
  92:	0b 01       	movw	r0, r22
  94:	a8 00       	.word	0x00a8	; ????
  96:	c1 00       	.word	0x00c1	; ????
  98:	da 00       	.word	0x00da	; ????
  9a:	f3 00       	.word	0x00f3	; ????
  9c:	18 01       	movw	r2, r16
  9e:	31 01       	movw	r6, r2
  a0:	4a 01       	movw	r8, r20
  a2:	63 01       	movw	r12, r6
  a4:	7b 01       	movw	r14, r22
  a6:	7b 01       	movw	r14, r22
  a8:	7b 01       	movw	r14, r22
  aa:	7b 01       	movw	r14, r22
  ac:	7b 01       	movw	r14, r22
  ae:	7b 01       	movw	r14, r22
  b0:	7b 01       	movw	r14, r22
  b2:	7b 01       	movw	r14, r22
  b4:	7b 01       	movw	r14, r22
  b6:	7b 01       	movw	r14, r22
  b8:	7b 01       	movw	r14, r22
  ba:	7b 01       	movw	r14, r22
  bc:	7b 01       	movw	r14, r22
  be:	7b 01       	movw	r14, r22
  c0:	7b 01       	movw	r14, r22
  c2:	7b 01       	movw	r14, r22
  c4:	7b 01       	movw	r14, r22
  c6:	7b 01       	movw	r14, r22
  c8:	7b 01       	movw	r14, r22
  ca:	7b 01       	movw	r14, r22
  cc:	7b 01       	movw	r14, r22
  ce:	7b 01       	movw	r14, r22
  d0:	7b 01       	movw	r14, r22
  d2:	7b 01       	movw	r14, r22
  d4:	7b 01       	movw	r14, r22
  d6:	7b 01       	movw	r14, r22
  d8:	7b 01       	movw	r14, r22
  da:	7b 01       	movw	r14, r22
  dc:	18 01       	movw	r2, r16
  de:	31 01       	movw	r6, r2
  e0:	4a 01       	movw	r8, r20
  e2:	63 01       	movw	r12, r6

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf e5       	ldi	r28, 0x5F	; 95
  ea:	d4 e0       	ldi	r29, 0x04	; 4
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	e4 ee       	ldi	r30, 0xE4	; 228
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	17 c0       	rjmp	.+46     	; 0x126 <__do_clear_bss+0x8>
  f8:	b5 91       	lpm	r27, Z+
  fa:	a5 91       	lpm	r26, Z+
  fc:	35 91       	lpm	r19, Z+
  fe:	25 91       	lpm	r18, Z+
 100:	05 91       	lpm	r16, Z+
 102:	07 fd       	sbrc	r16, 7
 104:	0c c0       	rjmp	.+24     	; 0x11e <__do_clear_bss>
 106:	95 91       	lpm	r25, Z+
 108:	85 91       	lpm	r24, Z+
 10a:	ef 01       	movw	r28, r30
 10c:	f9 2f       	mov	r31, r25
 10e:	e8 2f       	mov	r30, r24
 110:	05 90       	lpm	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	a2 17       	cp	r26, r18
 116:	b3 07       	cpc	r27, r19
 118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x20>
 11a:	fe 01       	movw	r30, r28
 11c:	04 c0       	rjmp	.+8      	; 0x126 <__do_clear_bss+0x8>

0000011e <__do_clear_bss>:
 11e:	1d 92       	st	X+, r1
 120:	a2 17       	cp	r26, r18
 122:	b3 07       	cpc	r27, r19
 124:	e1 f7       	brne	.-8      	; 0x11e <__do_clear_bss>
 126:	e4 3e       	cpi	r30, 0xE4	; 228
 128:	f4 07       	cpc	r31, r20
 12a:	31 f7       	brne	.-52     	; 0xf8 <__do_copy_data+0x8>
 12c:	0e 94 a9 01 	call	0x352	; 0x352 <main>
 130:	0c 94 9a 00 	jmp	0x134	; 0x134 <_exit>

00000134 <_exit>:
 134:	f8 94       	cli

00000136 <__stop_program>:
 136:	ff cf       	rjmp	.-2      	; 0x136 <__stop_program>

Disassembly of section .text:

000003ae <__bad_interrupt>:
 3ae:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_set_bit_dir:

00000138 <DIO_set_bit_dir>:
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	fc 01       	movw	r30, r24
 13c:	e1 54       	subi	r30, 0x41	; 65
 13e:	f1 09       	sbc	r31, r1
 140:	e4 32       	cpi	r30, 0x24	; 36
 142:	f1 05       	cpc	r31, r1
 144:	08 f0       	brcs	.+2      	; 0x148 <DIO_set_bit_dir+0x10>
 146:	67 c0       	rjmp	.+206    	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
 148:	e6 5d       	subi	r30, 0xD6	; 214
 14a:	ff 4f       	sbci	r31, 0xFF	; 255
 14c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__tablejump2__>
 150:	41 30       	cpi	r20, 0x01	; 1
 152:	59 f4       	brne	.+22     	; 0x16a <DIO_set_bit_dir+0x32>
 154:	2a b3       	in	r18, 0x1a	; 26
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_set_bit_dir+0x28>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_set_bit_dir+0x24>
 164:	82 2b       	or	r24, r18
 166:	8a bb       	out	0x1a, r24	; 26
 168:	08 95       	ret
 16a:	2a b3       	in	r18, 0x1a	; 26
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <DIO_set_bit_dir+0x3e>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <DIO_set_bit_dir+0x3a>
 17a:	80 95       	com	r24
 17c:	82 23       	and	r24, r18
 17e:	8a bb       	out	0x1a, r24	; 26
 180:	08 95       	ret
 182:	41 30       	cpi	r20, 0x01	; 1
 184:	59 f4       	brne	.+22     	; 0x19c <DIO_set_bit_dir+0x64>
 186:	27 b3       	in	r18, 0x17	; 23
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_set_bit_dir+0x5a>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	6a 95       	dec	r22
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_set_bit_dir+0x56>
 196:	82 2b       	or	r24, r18
 198:	87 bb       	out	0x17, r24	; 23
 19a:	08 95       	ret
 19c:	27 b3       	in	r18, 0x17	; 23
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_set_bit_dir+0x70>
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_set_bit_dir+0x6c>
 1ac:	80 95       	com	r24
 1ae:	82 23       	and	r24, r18
 1b0:	87 bb       	out	0x17, r24	; 23
 1b2:	08 95       	ret
 1b4:	41 30       	cpi	r20, 0x01	; 1
 1b6:	59 f4       	brne	.+22     	; 0x1ce <DIO_set_bit_dir+0x96>
 1b8:	24 b3       	in	r18, 0x14	; 20
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_set_bit_dir+0x8c>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_set_bit_dir+0x88>
 1c8:	82 2b       	or	r24, r18
 1ca:	84 bb       	out	0x14, r24	; 20
 1cc:	08 95       	ret
 1ce:	24 b3       	in	r18, 0x14	; 20
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_set_bit_dir+0xa2>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_set_bit_dir+0x9e>
 1de:	80 95       	com	r24
 1e0:	82 23       	and	r24, r18
 1e2:	84 bb       	out	0x14, r24	; 20
 1e4:	08 95       	ret
 1e6:	41 30       	cpi	r20, 0x01	; 1
 1e8:	59 f4       	brne	.+22     	; 0x200 <__EEPROM_REGION_LENGTH__>
 1ea:	21 b3       	in	r18, 0x11	; 17
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_set_bit_dir+0xbe>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_set_bit_dir+0xba>
 1fa:	82 2b       	or	r24, r18
 1fc:	81 bb       	out	0x11, r24	; 17
 1fe:	08 95       	ret
 200:	21 b3       	in	r18, 0x11	; 17
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	81 bb       	out	0x11, r24	; 17
 216:	08 95       	ret

Disassembly of section .text.DIO_write_bit:

00000218 <DIO_write_bit>:
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	fc 01       	movw	r30, r24
 21c:	e1 54       	subi	r30, 0x41	; 65
 21e:	f1 09       	sbc	r31, r1
 220:	e4 32       	cpi	r30, 0x24	; 36
 222:	f1 05       	cpc	r31, r1
 224:	08 f0       	brcs	.+2      	; 0x228 <DIO_write_bit+0x10>
 226:	67 c0       	rjmp	.+206    	; 0x2f6 <DIO_write_bit+0xde>
 228:	e2 5b       	subi	r30, 0xB2	; 178
 22a:	ff 4f       	sbci	r31, 0xFF	; 255
 22c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__tablejump2__>
 230:	41 30       	cpi	r20, 0x01	; 1
 232:	59 f4       	brne	.+22     	; 0x24a <DIO_write_bit+0x32>
 234:	2b b3       	in	r18, 0x1b	; 27
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_write_bit+0x28>
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	6a 95       	dec	r22
 242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_write_bit+0x24>
 244:	82 2b       	or	r24, r18
 246:	8b bb       	out	0x1b, r24	; 27
 248:	08 95       	ret
 24a:	2b b3       	in	r18, 0x1b	; 27
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_write_bit+0x3e>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_write_bit+0x3a>
 25a:	80 95       	com	r24
 25c:	82 23       	and	r24, r18
 25e:	8b bb       	out	0x1b, r24	; 27
 260:	08 95       	ret
 262:	41 30       	cpi	r20, 0x01	; 1
 264:	59 f4       	brne	.+22     	; 0x27c <DIO_write_bit+0x64>
 266:	28 b3       	in	r18, 0x18	; 24
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_write_bit+0x5a>
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_write_bit+0x56>
 276:	82 2b       	or	r24, r18
 278:	88 bb       	out	0x18, r24	; 24
 27a:	08 95       	ret
 27c:	28 b3       	in	r18, 0x18	; 24
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	02 c0       	rjmp	.+4      	; 0x288 <DIO_write_bit+0x70>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	6a 95       	dec	r22
 28a:	e2 f7       	brpl	.-8      	; 0x284 <DIO_write_bit+0x6c>
 28c:	80 95       	com	r24
 28e:	82 23       	and	r24, r18
 290:	88 bb       	out	0x18, r24	; 24
 292:	08 95       	ret
 294:	41 30       	cpi	r20, 0x01	; 1
 296:	59 f4       	brne	.+22     	; 0x2ae <DIO_write_bit+0x96>
 298:	25 b3       	in	r18, 0x15	; 21
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_write_bit+0x8c>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	6a 95       	dec	r22
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_write_bit+0x88>
 2a8:	82 2b       	or	r24, r18
 2aa:	85 bb       	out	0x15, r24	; 21
 2ac:	08 95       	ret
 2ae:	25 b3       	in	r18, 0x15	; 21
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_write_bit+0xa2>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	6a 95       	dec	r22
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_write_bit+0x9e>
 2be:	80 95       	com	r24
 2c0:	82 23       	and	r24, r18
 2c2:	85 bb       	out	0x15, r24	; 21
 2c4:	08 95       	ret
 2c6:	41 30       	cpi	r20, 0x01	; 1
 2c8:	59 f4       	brne	.+22     	; 0x2e0 <DIO_write_bit+0xc8>
 2ca:	22 b3       	in	r18, 0x12	; 18
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_write_bit+0xbe>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	6a 95       	dec	r22
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_write_bit+0xba>
 2da:	82 2b       	or	r24, r18
 2dc:	82 bb       	out	0x12, r24	; 18
 2de:	08 95       	ret
 2e0:	22 b3       	in	r18, 0x12	; 18
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_write_bit+0xd4>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	6a 95       	dec	r22
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_write_bit+0xd0>
 2f0:	80 95       	com	r24
 2f2:	82 23       	and	r24, r18
 2f4:	82 bb       	out	0x12, r24	; 18
 2f6:	08 95       	ret

Disassembly of section .text.main:

00000352 <main>:




int main(void)
{
 352:	cf 93       	push	r28
	//------------TX-----------
	unsigned char x=0;
	SPI_initialize_as_MASTER();
 354:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <SPI_initialize_as_MASTER>


int main(void)
{
	//------------TX-----------
	unsigned char x=0;
 358:	c0 e0       	ldi	r28, 0x00	; 0
	SPI_initialize_as_MASTER();
	//_delay_ms(300);
	while(x<10)
 35a:	0d c0       	rjmp	.+26     	; 0x376 <main+0x24>
	{
		SPI_master_send_data(x);
 35c:	8c 2f       	mov	r24, r28
 35e:	0e 94 c1 01 	call	0x382	; 0x382 <SPI_master_send_data>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 362:	2f e5       	ldi	r18, 0x5F	; 95
 364:	8a ee       	ldi	r24, 0xEA	; 234
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	21 50       	subi	r18, 0x01	; 1
 36a:	80 40       	sbci	r24, 0x00	; 0
 36c:	90 40       	sbci	r25, 0x00	; 0
 36e:	e1 f7       	brne	.-8      	; 0x368 <main+0x16>
 370:	00 c0       	rjmp	.+0      	; 0x372 <main+0x20>
 372:	00 00       	nop
		_delay_ms(300);
		x++;
 374:	cf 5f       	subi	r28, 0xFF	; 255
{
	//------------TX-----------
	unsigned char x=0;
	SPI_initialize_as_MASTER();
	//_delay_ms(300);
	while(x<10)
 376:	ca 30       	cpi	r28, 0x0A	; 10
 378:	88 f3       	brcs	.-30     	; 0x35c <main+0xa>
		z++;
	
	}*/
	
	
}
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	cf 91       	pop	r28
 380:	08 95       	ret

Disassembly of section .text.SPI_initialize_as_MASTER:

000002f8 <SPI_initialize_as_MASTER>:
void SPI_initialize_as_SLAVE(void)
{
	// Enable SPI
	set_bit(SPCR,SPE);
	// set output pin MISO>>PB6
	DIO_set_bit_dir('b',6,1);
 2f8:	41 e0       	ldi	r20, 0x01	; 1
 2fa:	50 e0       	ldi	r21, 0x00	; 0
 2fc:	64 e0       	ldi	r22, 0x04	; 4
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	82 e6       	ldi	r24, 0x62	; 98
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0e 94 9c 00 	call	0x138	; 0x138 <__data_load_end>
 308:	41 e0       	ldi	r20, 0x01	; 1
 30a:	50 e0       	ldi	r21, 0x00	; 0
 30c:	65 e0       	ldi	r22, 0x05	; 5
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	82 e6       	ldi	r24, 0x62	; 98
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 9c 00 	call	0x138	; 0x138 <__data_load_end>
 318:	41 e0       	ldi	r20, 0x01	; 1
 31a:	50 e0       	ldi	r21, 0x00	; 0
 31c:	67 e0       	ldi	r22, 0x07	; 7
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	82 e6       	ldi	r24, 0x62	; 98
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 9c 00 	call	0x138	; 0x138 <__data_load_end>
 328:	8d b1       	in	r24, 0x0d	; 13
 32a:	80 61       	ori	r24, 0x10	; 16
 32c:	8d b9       	out	0x0d, r24	; 13
 32e:	8d b1       	in	r24, 0x0d	; 13
 330:	81 60       	ori	r24, 0x01	; 1
 332:	8d b9       	out	0x0d, r24	; 13
 334:	8d b1       	in	r24, 0x0d	; 13
 336:	80 68       	ori	r24, 0x80	; 128
 338:	8d b9       	out	0x0d, r24	; 13
 33a:	8d b1       	in	r24, 0x0d	; 13
 33c:	80 64       	ori	r24, 0x40	; 64
 33e:	8d b9       	out	0x0d, r24	; 13
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	50 e0       	ldi	r21, 0x00	; 0
 344:	64 e0       	ldi	r22, 0x04	; 4
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	82 e6       	ldi	r24, 0x62	; 98
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 0c 01 	call	0x218	; 0x218 <DIO_write_bit>
 350:	08 95       	ret

Disassembly of section .text.SPI_master_send_data:

00000382 <SPI_master_send_data>:
}

unsigned char SPI_master_send_data(unsigned char data)
{
 382:	cf 93       	push	r28
 384:	c8 2f       	mov	r28, r24
	// clr ss bin to sellect slave
	DIO_write_bit('b',4,0);
 386:	40 e0       	ldi	r20, 0x00	; 0
 388:	50 e0       	ldi	r21, 0x00	; 0
 38a:	64 e0       	ldi	r22, 0x04	; 4
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	82 e6       	ldi	r24, 0x62	; 98
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 0c 01 	call	0x218	; 0x218 <DIO_write_bit>
	// save data on SPDR
	SPDR=data;
 396:	cf b9       	out	0x0f, r28	; 15
	
	
	// wait until transmission finished
	while(read_bit(SPSR,SPIF)==0);
 398:	77 9b       	sbis	0x0e, 7	; 14
 39a:	fe cf       	rjmp	.-4      	; 0x398 <SPI_master_send_data+0x16>
	
	// read spdr
	return SPDR;
 39c:	8f b1       	in	r24, 0x0f	; 15
	
}
 39e:	cf 91       	pop	r28
 3a0:	08 95       	ret

Disassembly of section .text.libgcc:

000003a2 <__tablejump2__>:
 3a2:	ee 0f       	add	r30, r30
 3a4:	ff 1f       	adc	r31, r31
 3a6:	05 90       	lpm	r0, Z+
 3a8:	f4 91       	lpm	r31, Z
 3aa:	e0 2d       	mov	r30, r0
 3ac:	09 94       	ijmp
