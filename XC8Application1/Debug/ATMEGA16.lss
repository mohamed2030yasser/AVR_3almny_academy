
ATMEGA16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005fe  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000005fe  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000160  00000000  00000000  0000062d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00002fdc  00000000  00000000  0000078d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000918  00000000  00000000  00003769  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000d3f  00000000  00000000  00004081  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000450  00000000  00000000  00004dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002b0  00000000  00000000  00005210  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000240e  00000000  00000000  000054c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000120  00000000  00000000  000078ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000005a2  000005a2  000005f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000079f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.DIO_set_bit_dir 000000e0  000001c8  000001c8  0000021c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.DIO_write_bit 000000e0  000002a8  000002a8  000002fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_set_dir 00000026  0000054a  0000054a  0000059e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.DIO_write_port 00000026  00000570  00000570  000005c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.I2C_set_adress 00000004  000005a6  000005a6  000005fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.I2C_slave_read 00000028  00000522  00000522  00000576  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.LCD_send_char 00000060  00000438  00000438  0000048c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.LCD_send_cmd 00000060  00000498  00000498  000004ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LCD_inatialize 000000b0  00000388  00000388  000003dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.main    0000002a  000004f8  000004f8  0000054c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.libgcc  0000000c  00000596  00000596  000005ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
   8:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
   c:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  10:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  14:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  18:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  1c:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  20:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  24:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  28:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  2c:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  30:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  34:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  38:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  3c:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  40:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  44:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  48:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  4c:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  50:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__bad_interrupt>
  54:	f0 00       	.word	0x00f0	; ????
  56:	09 01       	movw	r0, r18
  58:	22 01       	movw	r4, r4
  5a:	3b 01       	movw	r6, r22
  5c:	53 01       	movw	r10, r6
  5e:	53 01       	movw	r10, r6
  60:	53 01       	movw	r10, r6
  62:	53 01       	movw	r10, r6
  64:	53 01       	movw	r10, r6
  66:	53 01       	movw	r10, r6
  68:	53 01       	movw	r10, r6
  6a:	53 01       	movw	r10, r6
  6c:	53 01       	movw	r10, r6
  6e:	53 01       	movw	r10, r6
  70:	53 01       	movw	r10, r6
  72:	53 01       	movw	r10, r6
  74:	53 01       	movw	r10, r6
  76:	53 01       	movw	r10, r6
  78:	53 01       	movw	r10, r6
  7a:	53 01       	movw	r10, r6
  7c:	53 01       	movw	r10, r6
  7e:	53 01       	movw	r10, r6
  80:	53 01       	movw	r10, r6
  82:	53 01       	movw	r10, r6
  84:	53 01       	movw	r10, r6
  86:	53 01       	movw	r10, r6
  88:	53 01       	movw	r10, r6
  8a:	53 01       	movw	r10, r6
  8c:	53 01       	movw	r10, r6
  8e:	53 01       	movw	r10, r6
  90:	53 01       	movw	r10, r6
  92:	53 01       	movw	r10, r6
  94:	f0 00       	.word	0x00f0	; ????
  96:	09 01       	movw	r0, r18
  98:	22 01       	movw	r4, r4
  9a:	3b 01       	movw	r6, r22
  9c:	60 01       	movw	r12, r0
  9e:	79 01       	movw	r14, r18
  a0:	92 01       	movw	r18, r4
  a2:	ab 01       	movw	r20, r22
  a4:	c3 01       	movw	r24, r6
  a6:	c3 01       	movw	r24, r6
  a8:	c3 01       	movw	r24, r6
  aa:	c3 01       	movw	r24, r6
  ac:	c3 01       	movw	r24, r6
  ae:	c3 01       	movw	r24, r6
  b0:	c3 01       	movw	r24, r6
  b2:	c3 01       	movw	r24, r6
  b4:	c3 01       	movw	r24, r6
  b6:	c3 01       	movw	r24, r6
  b8:	c3 01       	movw	r24, r6
  ba:	c3 01       	movw	r24, r6
  bc:	c3 01       	movw	r24, r6
  be:	c3 01       	movw	r24, r6
  c0:	c3 01       	movw	r24, r6
  c2:	c3 01       	movw	r24, r6
  c4:	c3 01       	movw	r24, r6
  c6:	c3 01       	movw	r24, r6
  c8:	c3 01       	movw	r24, r6
  ca:	c3 01       	movw	r24, r6
  cc:	c3 01       	movw	r24, r6
  ce:	c3 01       	movw	r24, r6
  d0:	c3 01       	movw	r24, r6
  d2:	c3 01       	movw	r24, r6
  d4:	c3 01       	movw	r24, r6
  d6:	c3 01       	movw	r24, r6
  d8:	c3 01       	movw	r24, r6
  da:	c3 01       	movw	r24, r6
  dc:	60 01       	movw	r12, r0
  de:	79 01       	movw	r14, r18
  e0:	92 01       	movw	r18, r4
  e2:	ab 01       	movw	r20, r22
  e4:	b0 02       	muls	r27, r16
  e6:	b2 02       	muls	r27, r18
  e8:	b4 02       	muls	r27, r20
  ea:	b6 02       	muls	r27, r22
  ec:	b7 02       	muls	r27, r23
  ee:	b7 02       	muls	r27, r23
  f0:	b7 02       	muls	r27, r23
  f2:	b7 02       	muls	r27, r23
  f4:	b7 02       	muls	r27, r23
  f6:	b7 02       	muls	r27, r23
  f8:	b7 02       	muls	r27, r23
  fa:	b7 02       	muls	r27, r23
  fc:	b7 02       	muls	r27, r23
  fe:	b7 02       	muls	r27, r23
 100:	b7 02       	muls	r27, r23
 102:	b7 02       	muls	r27, r23
 104:	b7 02       	muls	r27, r23
 106:	b7 02       	muls	r27, r23
 108:	b7 02       	muls	r27, r23
 10a:	b7 02       	muls	r27, r23
 10c:	b7 02       	muls	r27, r23
 10e:	b7 02       	muls	r27, r23
 110:	b7 02       	muls	r27, r23
 112:	b7 02       	muls	r27, r23
 114:	b7 02       	muls	r27, r23
 116:	b7 02       	muls	r27, r23
 118:	b7 02       	muls	r27, r23
 11a:	b7 02       	muls	r27, r23
 11c:	b7 02       	muls	r27, r23
 11e:	b7 02       	muls	r27, r23
 120:	b7 02       	muls	r27, r23
 122:	b7 02       	muls	r27, r23
 124:	b0 02       	muls	r27, r16
 126:	b2 02       	muls	r27, r18
 128:	b4 02       	muls	r27, r20
 12a:	b6 02       	muls	r27, r22
 12c:	c3 02       	muls	r28, r19
 12e:	c5 02       	muls	r28, r21
 130:	c7 02       	muls	r28, r23
 132:	c9 02       	muls	r28, r25
 134:	ca 02       	muls	r28, r26
 136:	ca 02       	muls	r28, r26
 138:	ca 02       	muls	r28, r26
 13a:	ca 02       	muls	r28, r26
 13c:	ca 02       	muls	r28, r26
 13e:	ca 02       	muls	r28, r26
 140:	ca 02       	muls	r28, r26
 142:	ca 02       	muls	r28, r26
 144:	ca 02       	muls	r28, r26
 146:	ca 02       	muls	r28, r26
 148:	ca 02       	muls	r28, r26
 14a:	ca 02       	muls	r28, r26
 14c:	ca 02       	muls	r28, r26
 14e:	ca 02       	muls	r28, r26
 150:	ca 02       	muls	r28, r26
 152:	ca 02       	muls	r28, r26
 154:	ca 02       	muls	r28, r26
 156:	ca 02       	muls	r28, r26
 158:	ca 02       	muls	r28, r26
 15a:	ca 02       	muls	r28, r26
 15c:	ca 02       	muls	r28, r26
 15e:	ca 02       	muls	r28, r26
 160:	ca 02       	muls	r28, r26
 162:	ca 02       	muls	r28, r26
 164:	ca 02       	muls	r28, r26
 166:	ca 02       	muls	r28, r26
 168:	ca 02       	muls	r28, r26
 16a:	ca 02       	muls	r28, r26
 16c:	c3 02       	muls	r28, r19
 16e:	c5 02       	muls	r28, r21
 170:	c7 02       	muls	r28, r23
 172:	c9 02       	muls	r28, r25

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf e5       	ldi	r28, 0x5F	; 95
 17a:	d4 e0       	ldi	r29, 0x04	; 4
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_copy_data>:
 180:	e4 e7       	ldi	r30, 0x74	; 116
 182:	f1 e0       	ldi	r31, 0x01	; 1
 184:	41 e0       	ldi	r20, 0x01	; 1
 186:	17 c0       	rjmp	.+46     	; 0x1b6 <__do_clear_bss+0x8>
 188:	b5 91       	lpm	r27, Z+
 18a:	a5 91       	lpm	r26, Z+
 18c:	35 91       	lpm	r19, Z+
 18e:	25 91       	lpm	r18, Z+
 190:	05 91       	lpm	r16, Z+
 192:	07 fd       	sbrc	r16, 7
 194:	0c c0       	rjmp	.+24     	; 0x1ae <__do_clear_bss>
 196:	95 91       	lpm	r25, Z+
 198:	85 91       	lpm	r24, Z+
 19a:	ef 01       	movw	r28, r30
 19c:	f9 2f       	mov	r31, r25
 19e:	e8 2f       	mov	r30, r24
 1a0:	05 90       	lpm	r0, Z+
 1a2:	0d 92       	st	X+, r0
 1a4:	a2 17       	cp	r26, r18
 1a6:	b3 07       	cpc	r27, r19
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__do_copy_data+0x20>
 1aa:	fe 01       	movw	r30, r28
 1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <__do_clear_bss+0x8>

000001ae <__do_clear_bss>:
 1ae:	1d 92       	st	X+, r1
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <__do_clear_bss>
 1b6:	e4 37       	cpi	r30, 0x74	; 116
 1b8:	f4 07       	cpc	r31, r20
 1ba:	31 f7       	brne	.-52     	; 0x188 <__do_copy_data+0x8>
 1bc:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <main>
 1c0:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>

Disassembly of section .text:

000005a2 <__bad_interrupt>:
 5a2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_set_bit_dir:

000001c8 <DIO_set_bit_dir>:
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	fc 01       	movw	r30, r24
 1cc:	e1 54       	subi	r30, 0x41	; 65
 1ce:	f1 09       	sbc	r31, r1
 1d0:	e4 32       	cpi	r30, 0x24	; 36
 1d2:	f1 05       	cpc	r31, r1
 1d4:	08 f0       	brcs	.+2      	; 0x1d8 <DIO_set_bit_dir+0x10>
 1d6:	67 c0       	rjmp	.+206    	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
 1d8:	e6 5d       	subi	r30, 0xD6	; 214
 1da:	ff 4f       	sbci	r31, 0xFF	; 255
 1dc:	0c 94 cb 02 	jmp	0x596	; 0x596 <__tablejump2__>
 1e0:	41 30       	cpi	r20, 0x01	; 1
 1e2:	59 f4       	brne	.+22     	; 0x1fa <DIO_set_bit_dir+0x32>
 1e4:	2a b3       	in	r18, 0x1a	; 26
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_set_bit_dir+0x28>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_set_bit_dir+0x24>
 1f4:	82 2b       	or	r24, r18
 1f6:	8a bb       	out	0x1a, r24	; 26
 1f8:	08 95       	ret
 1fa:	2a b3       	in	r18, 0x1a	; 26
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 20a:	80 95       	com	r24
 20c:	82 23       	and	r24, r18
 20e:	8a bb       	out	0x1a, r24	; 26
 210:	08 95       	ret
 212:	41 30       	cpi	r20, 0x01	; 1
 214:	59 f4       	brne	.+22     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 216:	27 b3       	in	r18, 0x17	; 23
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 226:	82 2b       	or	r24, r18
 228:	87 bb       	out	0x17, r24	; 23
 22a:	08 95       	ret
 22c:	27 b3       	in	r18, 0x17	; 23
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
 23c:	80 95       	com	r24
 23e:	82 23       	and	r24, r18
 240:	87 bb       	out	0x17, r24	; 23
 242:	08 95       	ret
 244:	41 30       	cpi	r20, 0x01	; 1
 246:	59 f4       	brne	.+22     	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
 248:	24 b3       	in	r18, 0x14	; 20
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <__EEPROM_REGION_LENGTH__+0x54>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <__EEPROM_REGION_LENGTH__+0x50>
 258:	82 2b       	or	r24, r18
 25a:	84 bb       	out	0x14, r24	; 20
 25c:	08 95       	ret
 25e:	24 b3       	in	r18, 0x14	; 20
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c0       	rjmp	.+4      	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	6a 95       	dec	r22
 26c:	e2 f7       	brpl	.-8      	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
 26e:	80 95       	com	r24
 270:	82 23       	and	r24, r18
 272:	84 bb       	out	0x14, r24	; 20
 274:	08 95       	ret
 276:	41 30       	cpi	r20, 0x01	; 1
 278:	59 f4       	brne	.+22     	; 0x290 <__EEPROM_REGION_LENGTH__+0x90>
 27a:	21 b3       	in	r18, 0x11	; 17
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 c0       	rjmp	.+4      	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	6a 95       	dec	r22
 288:	e2 f7       	brpl	.-8      	; 0x282 <__EEPROM_REGION_LENGTH__+0x82>
 28a:	82 2b       	or	r24, r18
 28c:	81 bb       	out	0x11, r24	; 17
 28e:	08 95       	ret
 290:	21 b3       	in	r18, 0x11	; 17
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 c0       	rjmp	.+4      	; 0x29c <__EEPROM_REGION_LENGTH__+0x9c>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <__EEPROM_REGION_LENGTH__+0x98>
 2a0:	80 95       	com	r24
 2a2:	82 23       	and	r24, r18
 2a4:	81 bb       	out	0x11, r24	; 17
 2a6:	08 95       	ret

Disassembly of section .text.DIO_write_bit:

000002a8 <DIO_write_bit>:
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	fc 01       	movw	r30, r24
 2ac:	e1 54       	subi	r30, 0x41	; 65
 2ae:	f1 09       	sbc	r31, r1
 2b0:	e4 32       	cpi	r30, 0x24	; 36
 2b2:	f1 05       	cpc	r31, r1
 2b4:	08 f0       	brcs	.+2      	; 0x2b8 <DIO_write_bit+0x10>
 2b6:	67 c0       	rjmp	.+206    	; 0x386 <DIO_write_bit+0xde>
 2b8:	e2 5b       	subi	r30, 0xB2	; 178
 2ba:	ff 4f       	sbci	r31, 0xFF	; 255
 2bc:	0c 94 cb 02 	jmp	0x596	; 0x596 <__tablejump2__>
 2c0:	41 30       	cpi	r20, 0x01	; 1
 2c2:	59 f4       	brne	.+22     	; 0x2da <DIO_write_bit+0x32>
 2c4:	2b b3       	in	r18, 0x1b	; 27
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <DIO_write_bit+0x28>
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	6a 95       	dec	r22
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <DIO_write_bit+0x24>
 2d4:	82 2b       	or	r24, r18
 2d6:	8b bb       	out	0x1b, r24	; 27
 2d8:	08 95       	ret
 2da:	2b b3       	in	r18, 0x1b	; 27
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <DIO_write_bit+0x3e>
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	6a 95       	dec	r22
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <DIO_write_bit+0x3a>
 2ea:	80 95       	com	r24
 2ec:	82 23       	and	r24, r18
 2ee:	8b bb       	out	0x1b, r24	; 27
 2f0:	08 95       	ret
 2f2:	41 30       	cpi	r20, 0x01	; 1
 2f4:	59 f4       	brne	.+22     	; 0x30c <DIO_write_bit+0x64>
 2f6:	28 b3       	in	r18, 0x18	; 24
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_write_bit+0x5a>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_write_bit+0x56>
 306:	82 2b       	or	r24, r18
 308:	88 bb       	out	0x18, r24	; 24
 30a:	08 95       	ret
 30c:	28 b3       	in	r18, 0x18	; 24
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 c0       	rjmp	.+4      	; 0x318 <DIO_write_bit+0x70>
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	6a 95       	dec	r22
 31a:	e2 f7       	brpl	.-8      	; 0x314 <DIO_write_bit+0x6c>
 31c:	80 95       	com	r24
 31e:	82 23       	and	r24, r18
 320:	88 bb       	out	0x18, r24	; 24
 322:	08 95       	ret
 324:	41 30       	cpi	r20, 0x01	; 1
 326:	59 f4       	brne	.+22     	; 0x33e <DIO_write_bit+0x96>
 328:	25 b3       	in	r18, 0x15	; 21
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	02 c0       	rjmp	.+4      	; 0x334 <DIO_write_bit+0x8c>
 330:	88 0f       	add	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	6a 95       	dec	r22
 336:	e2 f7       	brpl	.-8      	; 0x330 <DIO_write_bit+0x88>
 338:	82 2b       	or	r24, r18
 33a:	85 bb       	out	0x15, r24	; 21
 33c:	08 95       	ret
 33e:	25 b3       	in	r18, 0x15	; 21
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_write_bit+0xa2>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	6a 95       	dec	r22
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_write_bit+0x9e>
 34e:	80 95       	com	r24
 350:	82 23       	and	r24, r18
 352:	85 bb       	out	0x15, r24	; 21
 354:	08 95       	ret
 356:	41 30       	cpi	r20, 0x01	; 1
 358:	59 f4       	brne	.+22     	; 0x370 <DIO_write_bit+0xc8>
 35a:	22 b3       	in	r18, 0x12	; 18
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	02 c0       	rjmp	.+4      	; 0x366 <DIO_write_bit+0xbe>
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	6a 95       	dec	r22
 368:	e2 f7       	brpl	.-8      	; 0x362 <DIO_write_bit+0xba>
 36a:	82 2b       	or	r24, r18
 36c:	82 bb       	out	0x12, r24	; 18
 36e:	08 95       	ret
 370:	22 b3       	in	r18, 0x12	; 18
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <DIO_write_bit+0xd4>
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	6a 95       	dec	r22
 37e:	e2 f7       	brpl	.-8      	; 0x378 <DIO_write_bit+0xd0>
 380:	80 95       	com	r24
 382:	82 23       	and	r24, r18
 384:	82 bb       	out	0x12, r24	; 18
 386:	08 95       	ret

Disassembly of section .text.DIO_set_dir:

0000054a <DIO_set_dir>:
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	fc 01       	movw	r30, r24
 54e:	e1 54       	subi	r30, 0x41	; 65
 550:	f1 09       	sbc	r31, r1
 552:	e4 32       	cpi	r30, 0x24	; 36
 554:	f1 05       	cpc	r31, r1
 556:	58 f4       	brcc	.+22     	; 0x56e <DIO_set_dir+0x24>
 558:	ee 58       	subi	r30, 0x8E	; 142
 55a:	ff 4f       	sbci	r31, 0xFF	; 255
 55c:	0c 94 cb 02 	jmp	0x596	; 0x596 <__tablejump2__>
 560:	6a bb       	out	0x1a, r22	; 26
 562:	08 95       	ret
 564:	67 bb       	out	0x17, r22	; 23
 566:	08 95       	ret
 568:	64 bb       	out	0x14, r22	; 20
 56a:	08 95       	ret
 56c:	61 bb       	out	0x11, r22	; 17
 56e:	08 95       	ret

Disassembly of section .text.DIO_write_port:

00000570 <DIO_write_port>:
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	fc 01       	movw	r30, r24
 574:	e1 54       	subi	r30, 0x41	; 65
 576:	f1 09       	sbc	r31, r1
 578:	e4 32       	cpi	r30, 0x24	; 36
 57a:	f1 05       	cpc	r31, r1
 57c:	58 f4       	brcc	.+22     	; 0x594 <DIO_write_port+0x24>
 57e:	ea 56       	subi	r30, 0x6A	; 106
 580:	ff 4f       	sbci	r31, 0xFF	; 255
 582:	0c 94 cb 02 	jmp	0x596	; 0x596 <__tablejump2__>
 586:	6b bb       	out	0x1b, r22	; 27
 588:	08 95       	ret
 58a:	68 bb       	out	0x18, r22	; 24
 58c:	08 95       	ret
 58e:	65 bb       	out	0x15, r22	; 21
 590:	08 95       	ret
 592:	62 bb       	out	0x12, r22	; 18
 594:	08 95       	ret

Disassembly of section .text.I2C_set_adress:

000005a6 <I2C_set_adress>:

// ---------------------------------- slave ------------------------------------------

void I2C_set_adress(unsigned char adress)
{
	TWAR=adress;
 5a6:	82 b9       	out	0x02, r24	; 2
 5a8:	08 95       	ret

Disassembly of section .text.I2C_slave_read:

00000522 <I2C_slave_read>:
	while((TWSR & 0xf8) != 0x28); //SLA+RW transmitted and ACH receaved
}

void I2C_stop(void)
{
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
 522:	84 ec       	ldi	r24, 0xC4	; 196
 524:	86 bf       	out	0x36, r24	; 54
 526:	06 b6       	in	r0, 0x36	; 54
 528:	07 fe       	sbrs	r0, 7
 52a:	fd cf       	rjmp	.-6      	; 0x526 <I2C_slave_read+0x4>
 52c:	81 b1       	in	r24, 0x01	; 1
 52e:	88 7f       	andi	r24, 0xF8	; 248
 530:	80 36       	cpi	r24, 0x60	; 96
 532:	e1 f7       	brne	.-8      	; 0x52c <I2C_slave_read+0xa>
 534:	84 ec       	ldi	r24, 0xC4	; 196
 536:	86 bf       	out	0x36, r24	; 54
 538:	06 b6       	in	r0, 0x36	; 54
 53a:	07 fe       	sbrs	r0, 7
 53c:	fd cf       	rjmp	.-6      	; 0x538 <I2C_slave_read+0x16>
 53e:	81 b1       	in	r24, 0x01	; 1
 540:	88 7f       	andi	r24, 0xF8	; 248
 542:	80 38       	cpi	r24, 0x80	; 128
 544:	e1 f7       	brne	.-8      	; 0x53e <I2C_slave_read+0x1c>
 546:	83 b1       	in	r24, 0x03	; 3
 548:	08 95       	ret

Disassembly of section .text.LCD_send_char:

00000438 <LCD_send_char>:
 438:	ef 92       	push	r14
 43a:	ff 92       	push	r15
 43c:	0f 93       	push	r16
 43e:	1f 93       	push	r17
 440:	cf 93       	push	r28
 442:	df 93       	push	r29
 444:	f8 2e       	mov	r15, r24
 446:	16 2f       	mov	r17, r22
 448:	c4 2f       	mov	r28, r20
 44a:	d2 2f       	mov	r29, r18
 44c:	80 2f       	mov	r24, r16
 44e:	6e 2d       	mov	r22, r14
 450:	41 e0       	ldi	r20, 0x01	; 1
 452:	0e 94 54 01 	call	0x2a8	; 0x2a8 <DIO_write_bit>
 456:	6f 2d       	mov	r22, r15
 458:	81 2f       	mov	r24, r17
 45a:	0e 94 b8 02 	call	0x570	; 0x570 <DIO_write_port>
 45e:	41 e0       	ldi	r20, 0x01	; 1
 460:	6d 2f       	mov	r22, r29
 462:	8c 2f       	mov	r24, r28
 464:	0e 94 54 01 	call	0x2a8	; 0x2a8 <DIO_write_bit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 468:	89 ef       	ldi	r24, 0xF9	; 249
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	01 97       	sbiw	r24, 0x01	; 1
 46e:	f1 f7       	brne	.-4      	; 0x46c <__stack+0xd>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__stack+0x13>
 472:	00 00       	nop
 474:	40 e0       	ldi	r20, 0x00	; 0
 476:	6d 2f       	mov	r22, r29
 478:	8c 2f       	mov	r24, r28
 47a:	0e 94 54 01 	call	0x2a8	; 0x2a8 <DIO_write_bit>
 47e:	89 ef       	ldi	r24, 0xF9	; 249
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	01 97       	sbiw	r24, 0x01	; 1
 484:	f1 f7       	brne	.-4      	; 0x482 <__stack+0x23>
 486:	00 c0       	rjmp	.+0      	; 0x488 <__stack+0x29>
 488:	00 00       	nop
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	1f 91       	pop	r17
 490:	0f 91       	pop	r16
 492:	ff 90       	pop	r15
 494:	ef 90       	pop	r14
 496:	08 95       	ret

Disassembly of section .text.LCD_send_cmd:

00000498 <LCD_send_cmd>:
 498:	ef 92       	push	r14
 49a:	ff 92       	push	r15
 49c:	0f 93       	push	r16
 49e:	1f 93       	push	r17
 4a0:	cf 93       	push	r28
 4a2:	df 93       	push	r29
 4a4:	f8 2e       	mov	r15, r24
 4a6:	16 2f       	mov	r17, r22
 4a8:	c4 2f       	mov	r28, r20
 4aa:	d2 2f       	mov	r29, r18
 4ac:	80 2f       	mov	r24, r16
 4ae:	6e 2d       	mov	r22, r14
 4b0:	40 e0       	ldi	r20, 0x00	; 0
 4b2:	0e 94 54 01 	call	0x2a8	; 0x2a8 <DIO_write_bit>
 4b6:	6f 2d       	mov	r22, r15
 4b8:	81 2f       	mov	r24, r17
 4ba:	0e 94 b8 02 	call	0x570	; 0x570 <DIO_write_port>
 4be:	41 e0       	ldi	r20, 0x01	; 1
 4c0:	6d 2f       	mov	r22, r29
 4c2:	8c 2f       	mov	r24, r28
 4c4:	0e 94 54 01 	call	0x2a8	; 0x2a8 <DIO_write_bit>
 4c8:	89 ef       	ldi	r24, 0xF9	; 249
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	01 97       	sbiw	r24, 0x01	; 1
 4ce:	f1 f7       	brne	.-4      	; 0x4cc <LCD_send_cmd+0x34>
 4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <LCD_send_cmd+0x3a>
 4d2:	00 00       	nop
 4d4:	40 e0       	ldi	r20, 0x00	; 0
 4d6:	6d 2f       	mov	r22, r29
 4d8:	8c 2f       	mov	r24, r28
 4da:	0e 94 54 01 	call	0x2a8	; 0x2a8 <DIO_write_bit>
 4de:	87 eb       	ldi	r24, 0xB7	; 183
 4e0:	9b e0       	ldi	r25, 0x0B	; 11
 4e2:	01 97       	sbiw	r24, 0x01	; 1
 4e4:	f1 f7       	brne	.-4      	; 0x4e2 <LCD_send_cmd+0x4a>
 4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <LCD_send_cmd+0x50>
 4e8:	00 00       	nop
 4ea:	df 91       	pop	r29
 4ec:	cf 91       	pop	r28
 4ee:	1f 91       	pop	r17
 4f0:	0f 91       	pop	r16
 4f2:	ff 90       	pop	r15
 4f4:	ef 90       	pop	r14
 4f6:	08 95       	ret

Disassembly of section .text.LCD_inatialize:

00000388 <LCD_inatialize>:
 388:	df 92       	push	r13
 38a:	ef 92       	push	r14
 38c:	ff 92       	push	r15
 38e:	0f 93       	push	r16
 390:	1f 93       	push	r17
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	c8 2f       	mov	r28, r24
 398:	d6 2f       	mov	r29, r22
 39a:	14 2f       	mov	r17, r20
 39c:	f2 2e       	mov	r15, r18
 39e:	6f ef       	ldi	r22, 0xFF	; 255
 3a0:	0e 94 a5 02 	call	0x54a	; 0x54a <DIO_set_dir>
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	60 2f       	mov	r22, r16
 3a8:	8f 2d       	mov	r24, r15
 3aa:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <__data_load_end>
 3ae:	41 e0       	ldi	r20, 0x01	; 1
 3b0:	61 2f       	mov	r22, r17
 3b2:	8d 2f       	mov	r24, r29
 3b4:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <__data_load_end>
 3b8:	8f e4       	ldi	r24, 0x4F	; 79
 3ba:	93 ec       	ldi	r25, 0xC3	; 195
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <LCD_inatialize+0x34>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <LCD_inatialize+0x3a>
 3c2:	00 00       	nop
 3c4:	e0 2e       	mov	r14, r16
 3c6:	0f 2d       	mov	r16, r15
 3c8:	21 2f       	mov	r18, r17
 3ca:	4d 2f       	mov	r20, r29
 3cc:	6c 2f       	mov	r22, r28
 3ce:	88 e3       	ldi	r24, 0x38	; 56
 3d0:	0e 94 4c 02 	call	0x498	; 0x498 <LCD_send_cmd>
 3d4:	89 ef       	ldi	r24, 0xF9	; 249
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <LCD_inatialize+0x50>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <LCD_inatialize+0x56>
 3de:	00 00       	nop
 3e0:	21 2f       	mov	r18, r17
 3e2:	4d 2f       	mov	r20, r29
 3e4:	6c 2f       	mov	r22, r28
 3e6:	8e e0       	ldi	r24, 0x0E	; 14
 3e8:	0e 94 4c 02 	call	0x498	; 0x498 <LCD_send_cmd>
 3ec:	89 ef       	ldi	r24, 0xF9	; 249
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <LCD_inatialize+0x68>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <LCD_inatialize+0x6e>
 3f6:	00 00       	nop
 3f8:	21 2f       	mov	r18, r17
 3fa:	4d 2f       	mov	r20, r29
 3fc:	6c 2f       	mov	r22, r28
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	0e 94 4c 02 	call	0x498	; 0x498 <LCD_send_cmd>
 404:	83 ec       	ldi	r24, 0xC3	; 195
 406:	99 e0       	ldi	r25, 0x09	; 9
 408:	01 97       	sbiw	r24, 0x01	; 1
 40a:	f1 f7       	brne	.-4      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 40c:	00 c0       	rjmp	.+0      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 40e:	00 00       	nop
 410:	21 2f       	mov	r18, r17
 412:	4d 2f       	mov	r20, r29
 414:	6c 2f       	mov	r22, r28
 416:	86 e0       	ldi	r24, 0x06	; 6
 418:	0e 94 4c 02 	call	0x498	; 0x498 <LCD_send_cmd>
 41c:	89 ef       	ldi	r24, 0xF9	; 249
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	01 97       	sbiw	r24, 0x01	; 1
 422:	f1 f7       	brne	.-4      	; 0x420 <__DATA_REGION_LENGTH__+0x20>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 426:	00 00       	nop
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	ff 90       	pop	r15
 432:	ef 90       	pop	r14
 434:	df 90       	pop	r13
 436:	08 95       	ret

Disassembly of section .text.main:

000004f8 <main>:
	}*/
	
	
		//---------------RX--------
	unsigned char x;
	LCD_inatialize('a','b',0,'b',1);
 4f8:	01 e0       	ldi	r16, 0x01	; 1
 4fa:	22 e6       	ldi	r18, 0x62	; 98
 4fc:	40 e0       	ldi	r20, 0x00	; 0
 4fe:	62 e6       	ldi	r22, 0x62	; 98
 500:	81 e6       	ldi	r24, 0x61	; 97
 502:	0e 94 c4 01 	call	0x388	; 0x388 <LCD_inatialize>
	I2C_set_adress(0b11111110);
 506:	8e ef       	ldi	r24, 0xFE	; 254
 508:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <I2C_set_adress>
	
	
	while(1)
	{
		x=I2C_slave_read();
 50c:	0e 94 91 02 	call	0x522	; 0x522 <I2C_slave_read>
		LCD_send_char(x,'a','b',0,'b',1);
 510:	ee 24       	eor	r14, r14
 512:	e3 94       	inc	r14
 514:	02 e6       	ldi	r16, 0x62	; 98
 516:	20 e0       	ldi	r18, 0x00	; 0
 518:	42 e6       	ldi	r20, 0x62	; 98
 51a:	61 e6       	ldi	r22, 0x61	; 97
 51c:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_send_char>
 520:	f5 cf       	rjmp	.-22     	; 0x50c <main+0x14>

Disassembly of section .text.libgcc:

00000596 <__tablejump2__>:
 596:	ee 0f       	add	r30, r30
 598:	ff 1f       	adc	r31, r31
 59a:	05 90       	lpm	r0, Z+
 59c:	f4 91       	lpm	r31, Z
 59e:	e0 2d       	mov	r30, r0
 5a0:	09 94       	ijmp
