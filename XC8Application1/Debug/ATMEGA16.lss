
ATMEGA16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000218  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000007f8  0000086c  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000148  00000000  00000000  0000089b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001d91  00000000  00000000  000009e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000a57  00000000  00000000  00002774  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000009e7  00000000  00000000  000031cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000002b4  00000000  00000000  00003bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002b7  00000000  00000000  00003e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000a0c  00000000  00000000  0000411f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000f8  00000000  00000000  00004b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000007e4  000007e4  00000858  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004c24  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.DIO_set_bit_dir 000000e0  00000218  00000218  0000028c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.DIO_write_bit 000000e0  000002f8  000002f8  0000036c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_tog_bit 0000006e  00000608  00000608  0000067c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.DIO_read_bit_u8 000000cc  000003d8  000003d8  0000044c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.DIO_internal_pullup_enable 00000098  00000570  00000570  000005e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.KeyPad_intialize 0000004e  00000728  00000728  0000079c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .rodata       00000010  00800060  000007e8  0000085c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 20 .text.KeyPad_read 000000cc  000004a4  000004a4  00000518  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_initialize 00000008  000007d6  000007d6  0000084a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_tog 00000006  000007de  000007de  00000852  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.main    00000038  00000776  00000776  000007ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__vector_10 00000058  000006d0  000006d0  00000744  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SPI_initialize_as_MASTER 0000005a  00000676  00000676  000006ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.SPI_master_send_data 0000001c  000007ae  000007ae  00000822  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.libgcc  0000000c  000007ca  000007ca  0000083e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__ctors_end>
   4:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
   8:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
   c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  10:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  14:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  18:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  1c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  20:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  24:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  28:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__vector_10>
  2c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  30:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  34:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  38:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  3c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  40:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  44:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  48:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  4c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  50:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__bad_interrupt>
  54:	18 01       	movw	r2, r16
  56:	31 01       	movw	r6, r2
  58:	4a 01       	movw	r8, r20
  5a:	63 01       	movw	r12, r6
  5c:	7b 01       	movw	r14, r22
  5e:	7b 01       	movw	r14, r22
  60:	7b 01       	movw	r14, r22
  62:	7b 01       	movw	r14, r22
  64:	7b 01       	movw	r14, r22
  66:	7b 01       	movw	r14, r22
  68:	7b 01       	movw	r14, r22
  6a:	7b 01       	movw	r14, r22
  6c:	7b 01       	movw	r14, r22
  6e:	7b 01       	movw	r14, r22
  70:	7b 01       	movw	r14, r22
  72:	7b 01       	movw	r14, r22
  74:	7b 01       	movw	r14, r22
  76:	7b 01       	movw	r14, r22
  78:	7b 01       	movw	r14, r22
  7a:	7b 01       	movw	r14, r22
  7c:	7b 01       	movw	r14, r22
  7e:	7b 01       	movw	r14, r22
  80:	7b 01       	movw	r14, r22
  82:	7b 01       	movw	r14, r22
  84:	7b 01       	movw	r14, r22
  86:	7b 01       	movw	r14, r22
  88:	7b 01       	movw	r14, r22
  8a:	7b 01       	movw	r14, r22
  8c:	7b 01       	movw	r14, r22
  8e:	7b 01       	movw	r14, r22
  90:	7b 01       	movw	r14, r22
  92:	7b 01       	movw	r14, r22
  94:	18 01       	movw	r2, r16
  96:	31 01       	movw	r6, r2
  98:	4a 01       	movw	r8, r20
  9a:	63 01       	movw	r12, r6
  9c:	88 01       	movw	r16, r16
  9e:	a1 01       	movw	r20, r2
  a0:	ba 01       	movw	r22, r20
  a2:	d3 01       	movw	r26, r6
  a4:	eb 01       	movw	r28, r22
  a6:	eb 01       	movw	r28, r22
  a8:	eb 01       	movw	r28, r22
  aa:	eb 01       	movw	r28, r22
  ac:	eb 01       	movw	r28, r22
  ae:	eb 01       	movw	r28, r22
  b0:	eb 01       	movw	r28, r22
  b2:	eb 01       	movw	r28, r22
  b4:	eb 01       	movw	r28, r22
  b6:	eb 01       	movw	r28, r22
  b8:	eb 01       	movw	r28, r22
  ba:	eb 01       	movw	r28, r22
  bc:	eb 01       	movw	r28, r22
  be:	eb 01       	movw	r28, r22
  c0:	eb 01       	movw	r28, r22
  c2:	eb 01       	movw	r28, r22
  c4:	eb 01       	movw	r28, r22
  c6:	eb 01       	movw	r28, r22
  c8:	eb 01       	movw	r28, r22
  ca:	eb 01       	movw	r28, r22
  cc:	eb 01       	movw	r28, r22
  ce:	eb 01       	movw	r28, r22
  d0:	eb 01       	movw	r28, r22
  d2:	eb 01       	movw	r28, r22
  d4:	eb 01       	movw	r28, r22
  d6:	eb 01       	movw	r28, r22
  d8:	eb 01       	movw	r28, r22
  da:	eb 01       	movw	r28, r22
  dc:	88 01       	movw	r16, r16
  de:	a1 01       	movw	r20, r2
  e0:	ba 01       	movw	r22, r20
  e2:	d3 01       	movw	r26, r6
  e4:	0f 03       	fmul	r16, r23
  e6:	1a 03       	fmul	r17, r18
  e8:	25 03       	mulsu	r18, r21
  ea:	30 03       	mulsu	r19, r16
  ec:	3a 03       	fmul	r19, r18
  ee:	3a 03       	fmul	r19, r18
  f0:	3a 03       	fmul	r19, r18
  f2:	3a 03       	fmul	r19, r18
  f4:	3a 03       	fmul	r19, r18
  f6:	3a 03       	fmul	r19, r18
  f8:	3a 03       	fmul	r19, r18
  fa:	3a 03       	fmul	r19, r18
  fc:	3a 03       	fmul	r19, r18
  fe:	3a 03       	fmul	r19, r18
 100:	3a 03       	fmul	r19, r18
 102:	3a 03       	fmul	r19, r18
 104:	3a 03       	fmul	r19, r18
 106:	3a 03       	fmul	r19, r18
 108:	3a 03       	fmul	r19, r18
 10a:	3a 03       	fmul	r19, r18
 10c:	3a 03       	fmul	r19, r18
 10e:	3a 03       	fmul	r19, r18
 110:	3a 03       	fmul	r19, r18
 112:	3a 03       	fmul	r19, r18
 114:	3a 03       	fmul	r19, r18
 116:	3a 03       	fmul	r19, r18
 118:	3a 03       	fmul	r19, r18
 11a:	3a 03       	fmul	r19, r18
 11c:	3a 03       	fmul	r19, r18
 11e:	3a 03       	fmul	r19, r18
 120:	3a 03       	fmul	r19, r18
 122:	3a 03       	fmul	r19, r18
 124:	0f 03       	fmul	r16, r23
 126:	1a 03       	fmul	r17, r18
 128:	25 03       	mulsu	r18, r21
 12a:	30 03       	mulsu	r19, r16
 12c:	fb 01       	movw	r30, r22
 12e:	10 02       	muls	r17, r16
 130:	25 02       	muls	r18, r21
 132:	3a 02       	muls	r19, r26
 134:	4e 02       	muls	r20, r30
 136:	4e 02       	muls	r20, r30
 138:	4e 02       	muls	r20, r30
 13a:	4e 02       	muls	r20, r30
 13c:	4e 02       	muls	r20, r30
 13e:	4e 02       	muls	r20, r30
 140:	4e 02       	muls	r20, r30
 142:	4e 02       	muls	r20, r30
 144:	4e 02       	muls	r20, r30
 146:	4e 02       	muls	r20, r30
 148:	4e 02       	muls	r20, r30
 14a:	4e 02       	muls	r20, r30
 14c:	4e 02       	muls	r20, r30
 14e:	4e 02       	muls	r20, r30
 150:	4e 02       	muls	r20, r30
 152:	4e 02       	muls	r20, r30
 154:	4e 02       	muls	r20, r30
 156:	4e 02       	muls	r20, r30
 158:	4e 02       	muls	r20, r30
 15a:	4e 02       	muls	r20, r30
 15c:	4e 02       	muls	r20, r30
 15e:	4e 02       	muls	r20, r30
 160:	4e 02       	muls	r20, r30
 162:	4e 02       	muls	r20, r30
 164:	4e 02       	muls	r20, r30
 166:	4e 02       	muls	r20, r30
 168:	4e 02       	muls	r20, r30
 16a:	4e 02       	muls	r20, r30
 16c:	fb 01       	movw	r30, r22
 16e:	10 02       	muls	r17, r16
 170:	25 02       	muls	r18, r21
 172:	3a 02       	muls	r19, r26
 174:	c4 02       	muls	r28, r20
 176:	d4 02       	muls	r29, r20
 178:	e4 02       	muls	r30, r20
 17a:	f4 02       	muls	r31, r20
 17c:	03 03       	mulsu	r16, r19
 17e:	03 03       	mulsu	r16, r19
 180:	03 03       	mulsu	r16, r19
 182:	03 03       	mulsu	r16, r19
 184:	03 03       	mulsu	r16, r19
 186:	03 03       	mulsu	r16, r19
 188:	03 03       	mulsu	r16, r19
 18a:	03 03       	mulsu	r16, r19
 18c:	03 03       	mulsu	r16, r19
 18e:	03 03       	mulsu	r16, r19
 190:	03 03       	mulsu	r16, r19
 192:	03 03       	mulsu	r16, r19
 194:	03 03       	mulsu	r16, r19
 196:	03 03       	mulsu	r16, r19
 198:	03 03       	mulsu	r16, r19
 19a:	03 03       	mulsu	r16, r19
 19c:	03 03       	mulsu	r16, r19
 19e:	03 03       	mulsu	r16, r19
 1a0:	03 03       	mulsu	r16, r19
 1a2:	03 03       	mulsu	r16, r19
 1a4:	03 03       	mulsu	r16, r19
 1a6:	03 03       	mulsu	r16, r19
 1a8:	03 03       	mulsu	r16, r19
 1aa:	03 03       	mulsu	r16, r19
 1ac:	03 03       	mulsu	r16, r19
 1ae:	03 03       	mulsu	r16, r19
 1b0:	03 03       	mulsu	r16, r19
 1b2:	03 03       	mulsu	r16, r19
 1b4:	c4 02       	muls	r28, r20
 1b6:	d4 02       	muls	r29, r20
 1b8:	e4 02       	muls	r30, r20
 1ba:	f4 02       	muls	r31, r20

000001bc <.dinit>:
 1bc:	00 60       	ori	r16, 0x00	; 0
 1be:	00 70       	andi	r16, 0x00	; 0
 1c0:	00 07       	cpc	r16, r16
 1c2:	e8 00       	.word	0x00e8	; ????

000001c4 <__ctors_end>:
 1c4:	11 24       	eor	r1, r1
 1c6:	1f be       	out	0x3f, r1	; 63
 1c8:	cf e5       	ldi	r28, 0x5F	; 95
 1ca:	d4 e0       	ldi	r29, 0x04	; 4
 1cc:	de bf       	out	0x3e, r29	; 62
 1ce:	cd bf       	out	0x3d, r28	; 61

000001d0 <__do_copy_data>:
 1d0:	ec eb       	ldi	r30, 0xBC	; 188
 1d2:	f1 e0       	ldi	r31, 0x01	; 1
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	17 c0       	rjmp	.+46     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 1d8:	b5 91       	lpm	r27, Z+
 1da:	a5 91       	lpm	r26, Z+
 1dc:	35 91       	lpm	r19, Z+
 1de:	25 91       	lpm	r18, Z+
 1e0:	05 91       	lpm	r16, Z+
 1e2:	07 fd       	sbrc	r16, 7
 1e4:	0c c0       	rjmp	.+24     	; 0x1fe <__do_clear_bss>
 1e6:	95 91       	lpm	r25, Z+
 1e8:	85 91       	lpm	r24, Z+
 1ea:	ef 01       	movw	r28, r30
 1ec:	f9 2f       	mov	r31, r25
 1ee:	e8 2f       	mov	r30, r24
 1f0:	05 90       	lpm	r0, Z+
 1f2:	0d 92       	st	X+, r0
 1f4:	a2 17       	cp	r26, r18
 1f6:	b3 07       	cpc	r27, r19
 1f8:	d9 f7       	brne	.-10     	; 0x1f0 <__do_copy_data+0x20>
 1fa:	fe 01       	movw	r30, r28
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>

000001fe <__do_clear_bss>:
 1fe:	1d 92       	st	X+, r1
 200:	a2 17       	cp	r26, r18
 202:	b3 07       	cpc	r27, r19
 204:	e1 f7       	brne	.-8      	; 0x1fe <__do_clear_bss>
 206:	e3 3c       	cpi	r30, 0xC3	; 195
 208:	f4 07       	cpc	r31, r20
 20a:	31 f7       	brne	.-52     	; 0x1d8 <__do_copy_data+0x8>
 20c:	0e 94 bb 03 	call	0x776	; 0x776 <main>
 210:	0c 94 0a 01 	jmp	0x214	; 0x214 <_exit>

00000214 <_exit>:
 214:	f8 94       	cli

00000216 <__stop_program>:
 216:	ff cf       	rjmp	.-2      	; 0x216 <__stop_program>

Disassembly of section .text:

000007e4 <__bad_interrupt>:
 7e4:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_set_bit_dir:

00000218 <DIO_set_bit_dir>:
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	fc 01       	movw	r30, r24
 21c:	e1 54       	subi	r30, 0x41	; 65
 21e:	f1 09       	sbc	r31, r1
 220:	e4 32       	cpi	r30, 0x24	; 36
 222:	f1 05       	cpc	r31, r1
 224:	08 f0       	brcs	.+2      	; 0x228 <DIO_set_bit_dir+0x10>
 226:	67 c0       	rjmp	.+206    	; 0x2f6 <DIO_set_bit_dir+0xde>
 228:	e6 5d       	subi	r30, 0xD6	; 214
 22a:	ff 4f       	sbci	r31, 0xFF	; 255
 22c:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__tablejump2__>
 230:	41 30       	cpi	r20, 0x01	; 1
 232:	59 f4       	brne	.+22     	; 0x24a <DIO_set_bit_dir+0x32>
 234:	2a b3       	in	r18, 0x1a	; 26
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_set_bit_dir+0x28>
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	6a 95       	dec	r22
 242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_set_bit_dir+0x24>
 244:	82 2b       	or	r24, r18
 246:	8a bb       	out	0x1a, r24	; 26
 248:	08 95       	ret
 24a:	2a b3       	in	r18, 0x1a	; 26
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_set_bit_dir+0x3e>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_set_bit_dir+0x3a>
 25a:	80 95       	com	r24
 25c:	82 23       	and	r24, r18
 25e:	8a bb       	out	0x1a, r24	; 26
 260:	08 95       	ret
 262:	41 30       	cpi	r20, 0x01	; 1
 264:	59 f4       	brne	.+22     	; 0x27c <DIO_set_bit_dir+0x64>
 266:	27 b3       	in	r18, 0x17	; 23
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_set_bit_dir+0x5a>
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_set_bit_dir+0x56>
 276:	82 2b       	or	r24, r18
 278:	87 bb       	out	0x17, r24	; 23
 27a:	08 95       	ret
 27c:	27 b3       	in	r18, 0x17	; 23
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	02 c0       	rjmp	.+4      	; 0x288 <DIO_set_bit_dir+0x70>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	6a 95       	dec	r22
 28a:	e2 f7       	brpl	.-8      	; 0x284 <DIO_set_bit_dir+0x6c>
 28c:	80 95       	com	r24
 28e:	82 23       	and	r24, r18
 290:	87 bb       	out	0x17, r24	; 23
 292:	08 95       	ret
 294:	41 30       	cpi	r20, 0x01	; 1
 296:	59 f4       	brne	.+22     	; 0x2ae <DIO_set_bit_dir+0x96>
 298:	24 b3       	in	r18, 0x14	; 20
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_set_bit_dir+0x8c>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	6a 95       	dec	r22
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_set_bit_dir+0x88>
 2a8:	82 2b       	or	r24, r18
 2aa:	84 bb       	out	0x14, r24	; 20
 2ac:	08 95       	ret
 2ae:	24 b3       	in	r18, 0x14	; 20
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_set_bit_dir+0xa2>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	6a 95       	dec	r22
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_set_bit_dir+0x9e>
 2be:	80 95       	com	r24
 2c0:	82 23       	and	r24, r18
 2c2:	84 bb       	out	0x14, r24	; 20
 2c4:	08 95       	ret
 2c6:	41 30       	cpi	r20, 0x01	; 1
 2c8:	59 f4       	brne	.+22     	; 0x2e0 <DIO_set_bit_dir+0xc8>
 2ca:	21 b3       	in	r18, 0x11	; 17
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_set_bit_dir+0xbe>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	6a 95       	dec	r22
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_set_bit_dir+0xba>
 2da:	82 2b       	or	r24, r18
 2dc:	81 bb       	out	0x11, r24	; 17
 2de:	08 95       	ret
 2e0:	21 b3       	in	r18, 0x11	; 17
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_set_bit_dir+0xd4>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	6a 95       	dec	r22
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_set_bit_dir+0xd0>
 2f0:	80 95       	com	r24
 2f2:	82 23       	and	r24, r18
 2f4:	81 bb       	out	0x11, r24	; 17
 2f6:	08 95       	ret

Disassembly of section .text.DIO_write_bit:

000002f8 <DIO_write_bit>:
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	fc 01       	movw	r30, r24
 2fc:	e1 54       	subi	r30, 0x41	; 65
 2fe:	f1 09       	sbc	r31, r1
 300:	e4 32       	cpi	r30, 0x24	; 36
 302:	f1 05       	cpc	r31, r1
 304:	08 f0       	brcs	.+2      	; 0x308 <DIO_write_bit+0x10>
 306:	67 c0       	rjmp	.+206    	; 0x3d6 <DIO_write_bit+0xde>
 308:	e2 5b       	subi	r30, 0xB2	; 178
 30a:	ff 4f       	sbci	r31, 0xFF	; 255
 30c:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__tablejump2__>
 310:	41 30       	cpi	r20, 0x01	; 1
 312:	59 f4       	brne	.+22     	; 0x32a <DIO_write_bit+0x32>
 314:	2b b3       	in	r18, 0x1b	; 27
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 c0       	rjmp	.+4      	; 0x320 <DIO_write_bit+0x28>
 31c:	88 0f       	add	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	6a 95       	dec	r22
 322:	e2 f7       	brpl	.-8      	; 0x31c <DIO_write_bit+0x24>
 324:	82 2b       	or	r24, r18
 326:	8b bb       	out	0x1b, r24	; 27
 328:	08 95       	ret
 32a:	2b b3       	in	r18, 0x1b	; 27
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_write_bit+0x3e>
 332:	88 0f       	add	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	6a 95       	dec	r22
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_write_bit+0x3a>
 33a:	80 95       	com	r24
 33c:	82 23       	and	r24, r18
 33e:	8b bb       	out	0x1b, r24	; 27
 340:	08 95       	ret
 342:	41 30       	cpi	r20, 0x01	; 1
 344:	59 f4       	brne	.+22     	; 0x35c <DIO_write_bit+0x64>
 346:	28 b3       	in	r18, 0x18	; 24
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	02 c0       	rjmp	.+4      	; 0x352 <DIO_write_bit+0x5a>
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	6a 95       	dec	r22
 354:	e2 f7       	brpl	.-8      	; 0x34e <DIO_write_bit+0x56>
 356:	82 2b       	or	r24, r18
 358:	88 bb       	out	0x18, r24	; 24
 35a:	08 95       	ret
 35c:	28 b3       	in	r18, 0x18	; 24
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	02 c0       	rjmp	.+4      	; 0x368 <DIO_write_bit+0x70>
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	6a 95       	dec	r22
 36a:	e2 f7       	brpl	.-8      	; 0x364 <DIO_write_bit+0x6c>
 36c:	80 95       	com	r24
 36e:	82 23       	and	r24, r18
 370:	88 bb       	out	0x18, r24	; 24
 372:	08 95       	ret
 374:	41 30       	cpi	r20, 0x01	; 1
 376:	59 f4       	brne	.+22     	; 0x38e <DIO_write_bit+0x96>
 378:	25 b3       	in	r18, 0x15	; 21
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	02 c0       	rjmp	.+4      	; 0x384 <DIO_write_bit+0x8c>
 380:	88 0f       	add	r24, r24
 382:	99 1f       	adc	r25, r25
 384:	6a 95       	dec	r22
 386:	e2 f7       	brpl	.-8      	; 0x380 <DIO_write_bit+0x88>
 388:	82 2b       	or	r24, r18
 38a:	85 bb       	out	0x15, r24	; 21
 38c:	08 95       	ret
 38e:	25 b3       	in	r18, 0x15	; 21
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_write_bit+0xa2>
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	6a 95       	dec	r22
 39c:	e2 f7       	brpl	.-8      	; 0x396 <DIO_write_bit+0x9e>
 39e:	80 95       	com	r24
 3a0:	82 23       	and	r24, r18
 3a2:	85 bb       	out	0x15, r24	; 21
 3a4:	08 95       	ret
 3a6:	41 30       	cpi	r20, 0x01	; 1
 3a8:	59 f4       	brne	.+22     	; 0x3c0 <DIO_write_bit+0xc8>
 3aa:	22 b3       	in	r18, 0x12	; 18
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <DIO_write_bit+0xbe>
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	6a 95       	dec	r22
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <DIO_write_bit+0xba>
 3ba:	82 2b       	or	r24, r18
 3bc:	82 bb       	out	0x12, r24	; 18
 3be:	08 95       	ret
 3c0:	22 b3       	in	r18, 0x12	; 18
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_write_bit+0xd4>
 3c8:	88 0f       	add	r24, r24
 3ca:	99 1f       	adc	r25, r25
 3cc:	6a 95       	dec	r22
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_write_bit+0xd0>
 3d0:	80 95       	com	r24
 3d2:	82 23       	and	r24, r18
 3d4:	82 bb       	out	0x12, r24	; 18
 3d6:	08 95       	ret

Disassembly of section .text.DIO_tog_bit:

00000608 <DIO_tog_bit>:
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	fc 01       	movw	r30, r24
 60c:	e1 54       	subi	r30, 0x41	; 65
 60e:	f1 09       	sbc	r31, r1
 610:	e4 32       	cpi	r30, 0x24	; 36
 612:	f1 05       	cpc	r31, r1
 614:	78 f5       	brcc	.+94     	; 0x674 <DIO_tog_bit+0x6c>
 616:	ee 58       	subi	r30, 0x8E	; 142
 618:	ff 4f       	sbci	r31, 0xFF	; 255
 61a:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__tablejump2__>
 61e:	2b b3       	in	r18, 0x1b	; 27
 620:	81 e0       	ldi	r24, 0x01	; 1
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	02 c0       	rjmp	.+4      	; 0x62a <DIO_tog_bit+0x22>
 626:	88 0f       	add	r24, r24
 628:	99 1f       	adc	r25, r25
 62a:	6a 95       	dec	r22
 62c:	e2 f7       	brpl	.-8      	; 0x626 <DIO_tog_bit+0x1e>
 62e:	82 27       	eor	r24, r18
 630:	8b bb       	out	0x1b, r24	; 27
 632:	08 95       	ret
 634:	28 b3       	in	r18, 0x18	; 24
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	02 c0       	rjmp	.+4      	; 0x640 <DIO_tog_bit+0x38>
 63c:	88 0f       	add	r24, r24
 63e:	99 1f       	adc	r25, r25
 640:	6a 95       	dec	r22
 642:	e2 f7       	brpl	.-8      	; 0x63c <DIO_tog_bit+0x34>
 644:	82 27       	eor	r24, r18
 646:	88 bb       	out	0x18, r24	; 24
 648:	08 95       	ret
 64a:	25 b3       	in	r18, 0x15	; 21
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <DIO_tog_bit+0x4e>
 652:	88 0f       	add	r24, r24
 654:	99 1f       	adc	r25, r25
 656:	6a 95       	dec	r22
 658:	e2 f7       	brpl	.-8      	; 0x652 <DIO_tog_bit+0x4a>
 65a:	82 27       	eor	r24, r18
 65c:	85 bb       	out	0x15, r24	; 21
 65e:	08 95       	ret
 660:	22 b3       	in	r18, 0x12	; 18
 662:	81 e0       	ldi	r24, 0x01	; 1
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	02 c0       	rjmp	.+4      	; 0x66c <DIO_tog_bit+0x64>
 668:	88 0f       	add	r24, r24
 66a:	99 1f       	adc	r25, r25
 66c:	6a 95       	dec	r22
 66e:	e2 f7       	brpl	.-8      	; 0x668 <DIO_tog_bit+0x60>
 670:	82 27       	eor	r24, r18
 672:	82 bb       	out	0x12, r24	; 18
 674:	08 95       	ret

Disassembly of section .text.DIO_read_bit_u8:

000003d8 <DIO_read_bit_u8>:
 3d8:	0f 93       	push	r16
 3da:	1f 93       	push	r17
 3dc:	08 2f       	mov	r16, r24
 3de:	10 e0       	ldi	r17, 0x00	; 0
 3e0:	f8 01       	movw	r30, r16
 3e2:	e1 54       	subi	r30, 0x41	; 65
 3e4:	f1 09       	sbc	r31, r1
 3e6:	e4 32       	cpi	r30, 0x24	; 36
 3e8:	f1 05       	cpc	r31, r1
 3ea:	08 f0       	brcs	.+2      	; 0x3ee <DIO_read_bit_u8+0x16>
 3ec:	57 c0       	rjmp	.+174    	; 0x49c <__stack+0x3d>
 3ee:	ea 56       	subi	r30, 0x6A	; 106
 3f0:	ff 4f       	sbci	r31, 0xFF	; 255
 3f2:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__tablejump2__>
 3f6:	49 b3       	in	r20, 0x19	; 25
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	9c 01       	movw	r18, r24
 3fe:	06 2e       	mov	r0, r22
 400:	02 c0       	rjmp	.+4      	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 402:	22 0f       	add	r18, r18
 404:	33 1f       	adc	r19, r19
 406:	0a 94       	dec	r0
 408:	e2 f7       	brpl	.-8      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 40a:	84 2f       	mov	r24, r20
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	82 23       	and	r24, r18
 410:	93 23       	and	r25, r19
 412:	02 c0       	rjmp	.+4      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 414:	95 95       	asr	r25
 416:	87 95       	ror	r24
 418:	6a 95       	dec	r22
 41a:	e2 f7       	brpl	.-8      	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 41c:	98 2f       	mov	r25, r24
 41e:	3e c0       	rjmp	.+124    	; 0x49c <__stack+0x3d>
 420:	46 b3       	in	r20, 0x16	; 22
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	9c 01       	movw	r18, r24
 428:	06 2e       	mov	r0, r22
 42a:	02 c0       	rjmp	.+4      	; 0x430 <__DATA_REGION_LENGTH__+0x30>
 42c:	22 0f       	add	r18, r18
 42e:	33 1f       	adc	r19, r19
 430:	0a 94       	dec	r0
 432:	e2 f7       	brpl	.-8      	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 434:	84 2f       	mov	r24, r20
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	82 23       	and	r24, r18
 43a:	93 23       	and	r25, r19
 43c:	02 c0       	rjmp	.+4      	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 43e:	95 95       	asr	r25
 440:	87 95       	ror	r24
 442:	6a 95       	dec	r22
 444:	e2 f7       	brpl	.-8      	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 446:	98 2f       	mov	r25, r24
 448:	29 c0       	rjmp	.+82     	; 0x49c <__stack+0x3d>
 44a:	43 b3       	in	r20, 0x13	; 19
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	9c 01       	movw	r18, r24
 452:	06 2e       	mov	r0, r22
 454:	02 c0       	rjmp	.+4      	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 456:	22 0f       	add	r18, r18
 458:	33 1f       	adc	r19, r19
 45a:	0a 94       	dec	r0
 45c:	e2 f7       	brpl	.-8      	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 45e:	84 2f       	mov	r24, r20
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	82 23       	and	r24, r18
 464:	93 23       	and	r25, r19
 466:	02 c0       	rjmp	.+4      	; 0x46c <__stack+0xd>
 468:	95 95       	asr	r25
 46a:	87 95       	ror	r24
 46c:	6a 95       	dec	r22
 46e:	e2 f7       	brpl	.-8      	; 0x468 <__stack+0x9>
 470:	98 2f       	mov	r25, r24
 472:	14 c0       	rjmp	.+40     	; 0x49c <__stack+0x3d>
 474:	40 b3       	in	r20, 0x10	; 16
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	9c 01       	movw	r18, r24
 47c:	06 2e       	mov	r0, r22
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__stack+0x25>
 480:	22 0f       	add	r18, r18
 482:	33 1f       	adc	r19, r19
 484:	0a 94       	dec	r0
 486:	e2 f7       	brpl	.-8      	; 0x480 <__stack+0x21>
 488:	84 2f       	mov	r24, r20
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	82 23       	and	r24, r18
 48e:	93 23       	and	r25, r19
 490:	02 c0       	rjmp	.+4      	; 0x496 <__stack+0x37>
 492:	95 95       	asr	r25
 494:	87 95       	ror	r24
 496:	6a 95       	dec	r22
 498:	e2 f7       	brpl	.-8      	; 0x492 <__stack+0x33>
 49a:	98 2f       	mov	r25, r24
 49c:	89 2f       	mov	r24, r25
 49e:	1f 91       	pop	r17
 4a0:	0f 91       	pop	r16
 4a2:	08 95       	ret

Disassembly of section .text.DIO_internal_pullup_enable:

00000570 <DIO_internal_pullup_enable>:
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	fc 01       	movw	r30, r24
 574:	e1 54       	subi	r30, 0x41	; 65
 576:	f1 09       	sbc	r31, r1
 578:	e4 32       	cpi	r30, 0x24	; 36
 57a:	f1 05       	cpc	r31, r1
 57c:	08 f0       	brcs	.+2      	; 0x580 <DIO_internal_pullup_enable+0x10>
 57e:	43 c0       	rjmp	.+134    	; 0x606 <DIO_internal_pullup_enable+0x96>
 580:	e6 54       	subi	r30, 0x46	; 70
 582:	ff 4f       	sbci	r31, 0xFF	; 255
 584:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__tablejump2__>
 588:	2a b3       	in	r18, 0x1a	; 26
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <DIO_internal_pullup_enable+0x24>
 590:	88 0f       	add	r24, r24
 592:	99 1f       	adc	r25, r25
 594:	6a 95       	dec	r22
 596:	e2 f7       	brpl	.-8      	; 0x590 <DIO_internal_pullup_enable+0x20>
 598:	98 2f       	mov	r25, r24
 59a:	90 95       	com	r25
 59c:	92 23       	and	r25, r18
 59e:	9a bb       	out	0x1a, r25	; 26
 5a0:	9b b3       	in	r25, 0x1b	; 27
 5a2:	89 2b       	or	r24, r25
 5a4:	8b bb       	out	0x1b, r24	; 27
 5a6:	08 95       	ret
 5a8:	27 b3       	in	r18, 0x17	; 23
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <DIO_internal_pullup_enable+0x44>
 5b0:	88 0f       	add	r24, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	6a 95       	dec	r22
 5b6:	e2 f7       	brpl	.-8      	; 0x5b0 <DIO_internal_pullup_enable+0x40>
 5b8:	98 2f       	mov	r25, r24
 5ba:	90 95       	com	r25
 5bc:	92 23       	and	r25, r18
 5be:	97 bb       	out	0x17, r25	; 23
 5c0:	98 b3       	in	r25, 0x18	; 24
 5c2:	89 2b       	or	r24, r25
 5c4:	88 bb       	out	0x18, r24	; 24
 5c6:	08 95       	ret
 5c8:	24 b3       	in	r18, 0x14	; 20
 5ca:	81 e0       	ldi	r24, 0x01	; 1
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <DIO_internal_pullup_enable+0x64>
 5d0:	88 0f       	add	r24, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	6a 95       	dec	r22
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <DIO_internal_pullup_enable+0x60>
 5d8:	98 2f       	mov	r25, r24
 5da:	90 95       	com	r25
 5dc:	92 23       	and	r25, r18
 5de:	94 bb       	out	0x14, r25	; 20
 5e0:	95 b3       	in	r25, 0x15	; 21
 5e2:	89 2b       	or	r24, r25
 5e4:	85 bb       	out	0x15, r24	; 21
 5e6:	08 95       	ret
 5e8:	21 b3       	in	r18, 0x11	; 17
 5ea:	81 e0       	ldi	r24, 0x01	; 1
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <DIO_internal_pullup_enable+0x84>
 5f0:	88 0f       	add	r24, r24
 5f2:	99 1f       	adc	r25, r25
 5f4:	6a 95       	dec	r22
 5f6:	e2 f7       	brpl	.-8      	; 0x5f0 <DIO_internal_pullup_enable+0x80>
 5f8:	98 2f       	mov	r25, r24
 5fa:	90 95       	com	r25
 5fc:	92 23       	and	r25, r18
 5fe:	91 bb       	out	0x11, r25	; 17
 600:	92 b3       	in	r25, 0x12	; 18
 602:	89 2b       	or	r24, r25
 604:	82 bb       	out	0x12, r24	; 18
 606:	08 95       	ret

Disassembly of section .text.KeyPad_intialize:

00000728 <KeyPad_intialize>:
 728:	cf 93       	push	r28
 72a:	c8 2f       	mov	r28, r24
 72c:	41 e0       	ldi	r20, 0x01	; 1
 72e:	60 e0       	ldi	r22, 0x00	; 0
 730:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 734:	41 e0       	ldi	r20, 0x01	; 1
 736:	61 e0       	ldi	r22, 0x01	; 1
 738:	8c 2f       	mov	r24, r28
 73a:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 73e:	41 e0       	ldi	r20, 0x01	; 1
 740:	62 e0       	ldi	r22, 0x02	; 2
 742:	8c 2f       	mov	r24, r28
 744:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 748:	41 e0       	ldi	r20, 0x01	; 1
 74a:	63 e0       	ldi	r22, 0x03	; 3
 74c:	8c 2f       	mov	r24, r28
 74e:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 752:	64 e0       	ldi	r22, 0x04	; 4
 754:	8c 2f       	mov	r24, r28
 756:	0e 94 b8 02 	call	0x570	; 0x570 <DIO_internal_pullup_enable>
 75a:	65 e0       	ldi	r22, 0x05	; 5
 75c:	8c 2f       	mov	r24, r28
 75e:	0e 94 b8 02 	call	0x570	; 0x570 <DIO_internal_pullup_enable>
 762:	66 e0       	ldi	r22, 0x06	; 6
 764:	8c 2f       	mov	r24, r28
 766:	0e 94 b8 02 	call	0x570	; 0x570 <DIO_internal_pullup_enable>
 76a:	67 e0       	ldi	r22, 0x07	; 7
 76c:	8c 2f       	mov	r24, r28
 76e:	0e 94 b8 02 	call	0x570	; 0x570 <DIO_internal_pullup_enable>
 772:	cf 91       	pop	r28
 774:	08 95       	ret

Disassembly of section .text.KeyPad_read:

000004a4 <KeyPad_read>:
 4a4:	ef 92       	push	r14
 4a6:	ff 92       	push	r15
 4a8:	0f 93       	push	r16
 4aa:	1f 93       	push	r17
 4ac:	cf 93       	push	r28
 4ae:	df 93       	push	r29
 4b0:	cd b7       	in	r28, 0x3d	; 61
 4b2:	de b7       	in	r29, 0x3e	; 62
 4b4:	60 97       	sbiw	r28, 0x10	; 16
 4b6:	0f b6       	in	r0, 0x3f	; 63
 4b8:	f8 94       	cli
 4ba:	de bf       	out	0x3e, r29	; 62
 4bc:	0f be       	out	0x3f, r0	; 63
 4be:	cd bf       	out	0x3d, r28	; 61
 4c0:	08 2f       	mov	r16, r24
 4c2:	80 e1       	ldi	r24, 0x10	; 16
 4c4:	e0 e6       	ldi	r30, 0x60	; 96
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	de 01       	movw	r26, r28
 4ca:	11 96       	adiw	r26, 0x01	; 1
 4cc:	01 90       	ld	r0, Z+
 4ce:	0d 92       	st	X+, r0
 4d0:	8a 95       	dec	r24
 4d2:	e1 f7       	brne	.-8      	; 0x4cc <KeyPad_read+0x28>
 4d4:	ee 24       	eor	r14, r14
 4d6:	ea 94       	dec	r14
 4d8:	f1 2c       	mov	r15, r1
 4da:	39 c0       	rjmp	.+114    	; 0x54e <KeyPad_read+0xaa>
 4dc:	41 e0       	ldi	r20, 0x01	; 1
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	80 2f       	mov	r24, r16
 4e2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
 4e6:	41 e0       	ldi	r20, 0x01	; 1
 4e8:	61 e0       	ldi	r22, 0x01	; 1
 4ea:	80 2f       	mov	r24, r16
 4ec:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
 4f0:	41 e0       	ldi	r20, 0x01	; 1
 4f2:	62 e0       	ldi	r22, 0x02	; 2
 4f4:	80 2f       	mov	r24, r16
 4f6:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
 4fa:	41 e0       	ldi	r20, 0x01	; 1
 4fc:	63 e0       	ldi	r22, 0x03	; 3
 4fe:	80 2f       	mov	r24, r16
 500:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
 504:	40 e0       	ldi	r20, 0x00	; 0
 506:	6f 2d       	mov	r22, r15
 508:	80 2f       	mov	r24, r16
 50a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
 50e:	10 e0       	ldi	r17, 0x00	; 0
 510:	18 c0       	rjmp	.+48     	; 0x542 <KeyPad_read+0x9e>
 512:	64 e0       	ldi	r22, 0x04	; 4
 514:	61 0f       	add	r22, r17
 516:	80 2f       	mov	r24, r16
 518:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <DIO_read_bit_u8>
 51c:	81 11       	cpse	r24, r1
 51e:	10 c0       	rjmp	.+32     	; 0x540 <KeyPad_read+0x9c>
 520:	ef 2d       	mov	r30, r15
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	ee 0f       	add	r30, r30
 526:	ff 1f       	adc	r31, r31
 528:	ee 0f       	add	r30, r30
 52a:	ff 1f       	adc	r31, r31
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	8c 0f       	add	r24, r28
 532:	9d 1f       	adc	r25, r29
 534:	e8 0f       	add	r30, r24
 536:	f9 1f       	adc	r31, r25
 538:	e1 0f       	add	r30, r17
 53a:	f1 1d       	adc	r31, r1
 53c:	e0 80       	ld	r14, Z
 53e:	03 c0       	rjmp	.+6      	; 0x546 <KeyPad_read+0xa2>
 540:	1f 5f       	subi	r17, 0xFF	; 255
 542:	14 30       	cpi	r17, 0x04	; 4
 544:	30 f3       	brcs	.-52     	; 0x512 <KeyPad_read+0x6e>
 546:	9f ef       	ldi	r25, 0xFF	; 255
 548:	e9 12       	cpse	r14, r25
 54a:	04 c0       	rjmp	.+8      	; 0x554 <KeyPad_read+0xb0>
 54c:	f3 94       	inc	r15
 54e:	83 e0       	ldi	r24, 0x03	; 3
 550:	8f 15       	cp	r24, r15
 552:	20 f6       	brcc	.-120    	; 0x4dc <KeyPad_read+0x38>
 554:	8e 2d       	mov	r24, r14
 556:	60 96       	adiw	r28, 0x10	; 16
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	f8 94       	cli
 55c:	de bf       	out	0x3e, r29	; 62
 55e:	0f be       	out	0x3f, r0	; 63
 560:	cd bf       	out	0x3d, r28	; 61
 562:	df 91       	pop	r29
 564:	cf 91       	pop	r28
 566:	1f 91       	pop	r17
 568:	0f 91       	pop	r16
 56a:	ff 90       	pop	r15
 56c:	ef 90       	pop	r14
 56e:	08 95       	ret

Disassembly of section .text.LED_initialize:

000007d6 <LED_initialize>:
}


void LED_off(unsigned char port,unsigned char pin_num){
	
	DIO_write_bit(port,pin_num,0);
 7d6:	41 e0       	ldi	r20, 0x01	; 1
 7d8:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 7dc:	08 95       	ret

Disassembly of section .text.LED_tog:

000007de <LED_tog>:
}


void LED_tog(unsigned char port,unsigned char pin_num){
	
	DIO_tog_bit(port,pin_num);
 7de:	0e 94 04 03 	call	0x608	; 0x608 <DIO_tog_bit>
 7e2:	08 95       	ret

Disassembly of section .text.main:

00000776 <main>:


int main(void)
{
	//------------TX-----------
	SPI_initialize_as_MASTER();
 776:	0e 94 3b 03 	call	0x676	; 0x676 <SPI_initialize_as_MASTER>
	KeyPad_intialize('a');
 77a:	81 e6       	ldi	r24, 0x61	; 97
 77c:	0e 94 94 03 	call	0x728	; 0x728 <KeyPad_intialize>
	LED_initialize('d',0);
 780:	60 e0       	ldi	r22, 0x00	; 0
 782:	84 e6       	ldi	r24, 0x64	; 100
 784:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <LED_initialize>
	sei();
 788:	78 94       	sei
	unsigned char x=0;
	
	while(1)
	{
		if (KeyPad_read('a')!=0xff)
 78a:	81 e6       	ldi	r24, 0x61	; 97
 78c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <KeyPad_read>
 790:	8f 3f       	cpi	r24, 0xFF	; 255
 792:	d9 f3       	breq	.-10     	; 0x78a <main+0x14>
		{
			x=KeyPad_read('a');
 794:	81 e6       	ldi	r24, 0x61	; 97
 796:	0e 94 52 02 	call	0x4a4	; 0x4a4 <KeyPad_read>
 79a:	c8 2f       	mov	r28, r24
			while(KeyPad_read('a')!=0xff);
 79c:	81 e6       	ldi	r24, 0x61	; 97
 79e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <KeyPad_read>
 7a2:	8f 3f       	cpi	r24, 0xFF	; 255
 7a4:	d9 f7       	brne	.-10     	; 0x79c <main+0x26>
			SPI_master_send_data(x);
 7a6:	8c 2f       	mov	r24, r28
 7a8:	0e 94 d7 03 	call	0x7ae	; 0x7ae <SPI_master_send_data>
 7ac:	ee cf       	rjmp	.-36     	; 0x78a <main+0x14>

Disassembly of section .text.__vector_10:

000006d0 <__vector_10>:
	
	
}

ISR(SPI_STC_vect)
{
 6d0:	1f 92       	push	r1
 6d2:	0f 92       	push	r0
 6d4:	0f b6       	in	r0, 0x3f	; 63
 6d6:	0f 92       	push	r0
 6d8:	11 24       	eor	r1, r1
 6da:	2f 93       	push	r18
 6dc:	3f 93       	push	r19
 6de:	4f 93       	push	r20
 6e0:	5f 93       	push	r21
 6e2:	6f 93       	push	r22
 6e4:	7f 93       	push	r23
 6e6:	8f 93       	push	r24
 6e8:	9f 93       	push	r25
 6ea:	af 93       	push	r26
 6ec:	bf 93       	push	r27
 6ee:	ef 93       	push	r30
 6f0:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6f2:	87 ea       	ldi	r24, 0xA7	; 167
 6f4:	91 e6       	ldi	r25, 0x61	; 97
 6f6:	01 97       	sbiw	r24, 0x01	; 1
 6f8:	f1 f7       	brne	.-4      	; 0x6f6 <__vector_10+0x26>
 6fa:	00 c0       	rjmp	.+0      	; 0x6fc <__vector_10+0x2c>
 6fc:	00 00       	nop
	_delay_ms(100);
	LED_tog('d',0);
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	84 e6       	ldi	r24, 0x64	; 100
 702:	0e 94 ef 03 	call	0x7de	; 0x7de <LED_tog>
}
 706:	ff 91       	pop	r31
 708:	ef 91       	pop	r30
 70a:	bf 91       	pop	r27
 70c:	af 91       	pop	r26
 70e:	9f 91       	pop	r25
 710:	8f 91       	pop	r24
 712:	7f 91       	pop	r23
 714:	6f 91       	pop	r22
 716:	5f 91       	pop	r21
 718:	4f 91       	pop	r20
 71a:	3f 91       	pop	r19
 71c:	2f 91       	pop	r18
 71e:	0f 90       	pop	r0
 720:	0f be       	out	0x3f, r0	; 63
 722:	0f 90       	pop	r0
 724:	1f 90       	pop	r1
 726:	18 95       	reti

Disassembly of section .text.SPI_initialize_as_MASTER:

00000676 <SPI_initialize_as_MASTER>:
void SPI_initialize_as_SLAVE(void)
{
	// Enable SPI
	set_bit(SPCR,SPE);
	// set output pin MISO>>PB6
	DIO_set_bit_dir('b',6,1);
 676:	41 e0       	ldi	r20, 0x01	; 1
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	64 e0       	ldi	r22, 0x04	; 4
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	82 e6       	ldi	r24, 0x62	; 98
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 686:	41 e0       	ldi	r20, 0x01	; 1
 688:	50 e0       	ldi	r21, 0x00	; 0
 68a:	65 e0       	ldi	r22, 0x05	; 5
 68c:	70 e0       	ldi	r23, 0x00	; 0
 68e:	82 e6       	ldi	r24, 0x62	; 98
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 696:	41 e0       	ldi	r20, 0x01	; 1
 698:	50 e0       	ldi	r21, 0x00	; 0
 69a:	67 e0       	ldi	r22, 0x07	; 7
 69c:	70 e0       	ldi	r23, 0x00	; 0
 69e:	82 e6       	ldi	r24, 0x62	; 98
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 0c 01 	call	0x218	; 0x218 <__data_load_end>
 6a6:	8d b1       	in	r24, 0x0d	; 13
 6a8:	80 61       	ori	r24, 0x10	; 16
 6aa:	8d b9       	out	0x0d, r24	; 13
 6ac:	8d b1       	in	r24, 0x0d	; 13
 6ae:	81 60       	ori	r24, 0x01	; 1
 6b0:	8d b9       	out	0x0d, r24	; 13
 6b2:	8d b1       	in	r24, 0x0d	; 13
 6b4:	80 68       	ori	r24, 0x80	; 128
 6b6:	8d b9       	out	0x0d, r24	; 13
 6b8:	8d b1       	in	r24, 0x0d	; 13
 6ba:	80 64       	ori	r24, 0x40	; 64
 6bc:	8d b9       	out	0x0d, r24	; 13
 6be:	41 e0       	ldi	r20, 0x01	; 1
 6c0:	50 e0       	ldi	r21, 0x00	; 0
 6c2:	64 e0       	ldi	r22, 0x04	; 4
 6c4:	70 e0       	ldi	r23, 0x00	; 0
 6c6:	82 e6       	ldi	r24, 0x62	; 98
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
 6ce:	08 95       	ret

Disassembly of section .text.SPI_master_send_data:

000007ae <SPI_master_send_data>:
}

unsigned char SPI_master_send_data(unsigned char data)
{
 7ae:	cf 93       	push	r28
 7b0:	c8 2f       	mov	r28, r24
	// clr ss bin to sellect slave
	DIO_write_bit('b',4,0);
 7b2:	40 e0       	ldi	r20, 0x00	; 0
 7b4:	50 e0       	ldi	r21, 0x00	; 0
 7b6:	64 e0       	ldi	r22, 0x04	; 4
 7b8:	70 e0       	ldi	r23, 0x00	; 0
 7ba:	82 e6       	ldi	r24, 0x62	; 98
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_write_bit>
	// save data on SPDR
	SPDR=data;
 7c2:	cf b9       	out	0x0f, r28	; 15
	
	// wait until transmission finished
	//while(read_bit(SPSR,SPIF)==0);
	
	// read spdr
	return SPDR;
 7c4:	8f b1       	in	r24, 0x0f	; 15
	
}
 7c6:	cf 91       	pop	r28
 7c8:	08 95       	ret

Disassembly of section .text.libgcc:

000007ca <__tablejump2__>:
 7ca:	ee 0f       	add	r30, r30
 7cc:	ff 1f       	adc	r31, r31
 7ce:	05 90       	lpm	r0, Z+
 7d0:	f4 91       	lpm	r31, Z
 7d2:	e0 2d       	mov	r30, r0
 7d4:	09 94       	ijmp
