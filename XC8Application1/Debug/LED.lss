
LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000144  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000474  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000b8  00000000  00000000  000004a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001034  00000000  00000000  0000055b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000006f0  00000000  00000000  0000158f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000004ee  00000000  00000000  00001c7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000128  00000000  00000000  00002170  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000215  00000000  00000000  00002298  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000485  00000000  00000000  000024ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000088  00000000  00000000  00002932  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000041c  0000041c  00000470  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000029bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.DIO_set_bit_dir 000000e0  00000144  00000144  00000198  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.DIO_write_bit 000000e0  00000224  00000224  00000278  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_read_bit_u8 000000cc  00000304  00000304  00000358  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LED_initialize 00000008  00000404  00000404  00000458  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LED_on  00000008  0000040c  0000040c  00000460  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LED_off 00000008  00000414  00000414  00000468  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    00000028  000003d0  000003d0  00000424  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.libgcc  0000000c  000003f8  000003f8  0000044c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 96 00 	jmp	0x12c	; 0x12c <__ctors_end>
   4:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
   8:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
   c:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  10:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  14:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  18:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  1c:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  20:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  24:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  28:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  2c:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  30:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  34:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  38:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  3c:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  40:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  44:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  48:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  4c:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  50:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__bad_interrupt>
  54:	ae 00       	.word	0x00ae	; ????
  56:	c7 00       	.word	0x00c7	; ????
  58:	e0 00       	.word	0x00e0	; ????
  5a:	f9 00       	.word	0x00f9	; ????
  5c:	11 01       	movw	r2, r2
  5e:	11 01       	movw	r2, r2
  60:	11 01       	movw	r2, r2
  62:	11 01       	movw	r2, r2
  64:	11 01       	movw	r2, r2
  66:	11 01       	movw	r2, r2
  68:	11 01       	movw	r2, r2
  6a:	11 01       	movw	r2, r2
  6c:	11 01       	movw	r2, r2
  6e:	11 01       	movw	r2, r2
  70:	11 01       	movw	r2, r2
  72:	11 01       	movw	r2, r2
  74:	11 01       	movw	r2, r2
  76:	11 01       	movw	r2, r2
  78:	11 01       	movw	r2, r2
  7a:	11 01       	movw	r2, r2
  7c:	11 01       	movw	r2, r2
  7e:	11 01       	movw	r2, r2
  80:	11 01       	movw	r2, r2
  82:	11 01       	movw	r2, r2
  84:	11 01       	movw	r2, r2
  86:	11 01       	movw	r2, r2
  88:	11 01       	movw	r2, r2
  8a:	11 01       	movw	r2, r2
  8c:	11 01       	movw	r2, r2
  8e:	11 01       	movw	r2, r2
  90:	11 01       	movw	r2, r2
  92:	11 01       	movw	r2, r2
  94:	ae 00       	.word	0x00ae	; ????
  96:	c7 00       	.word	0x00c7	; ????
  98:	e0 00       	.word	0x00e0	; ????
  9a:	f9 00       	.word	0x00f9	; ????
  9c:	1e 01       	movw	r2, r28
  9e:	37 01       	movw	r6, r14
  a0:	50 01       	movw	r10, r0
  a2:	69 01       	movw	r12, r18
  a4:	81 01       	movw	r16, r2
  a6:	81 01       	movw	r16, r2
  a8:	81 01       	movw	r16, r2
  aa:	81 01       	movw	r16, r2
  ac:	81 01       	movw	r16, r2
  ae:	81 01       	movw	r16, r2
  b0:	81 01       	movw	r16, r2
  b2:	81 01       	movw	r16, r2
  b4:	81 01       	movw	r16, r2
  b6:	81 01       	movw	r16, r2
  b8:	81 01       	movw	r16, r2
  ba:	81 01       	movw	r16, r2
  bc:	81 01       	movw	r16, r2
  be:	81 01       	movw	r16, r2
  c0:	81 01       	movw	r16, r2
  c2:	81 01       	movw	r16, r2
  c4:	81 01       	movw	r16, r2
  c6:	81 01       	movw	r16, r2
  c8:	81 01       	movw	r16, r2
  ca:	81 01       	movw	r16, r2
  cc:	81 01       	movw	r16, r2
  ce:	81 01       	movw	r16, r2
  d0:	81 01       	movw	r16, r2
  d2:	81 01       	movw	r16, r2
  d4:	81 01       	movw	r16, r2
  d6:	81 01       	movw	r16, r2
  d8:	81 01       	movw	r16, r2
  da:	81 01       	movw	r16, r2
  dc:	1e 01       	movw	r2, r28
  de:	37 01       	movw	r6, r14
  e0:	50 01       	movw	r10, r0
  e2:	69 01       	movw	r12, r18
  e4:	91 01       	movw	r18, r2
  e6:	a6 01       	movw	r20, r12
  e8:	bb 01       	movw	r22, r22
  ea:	d0 01       	movw	r26, r0
  ec:	e4 01       	movw	r28, r8
  ee:	e4 01       	movw	r28, r8
  f0:	e4 01       	movw	r28, r8
  f2:	e4 01       	movw	r28, r8
  f4:	e4 01       	movw	r28, r8
  f6:	e4 01       	movw	r28, r8
  f8:	e4 01       	movw	r28, r8
  fa:	e4 01       	movw	r28, r8
  fc:	e4 01       	movw	r28, r8
  fe:	e4 01       	movw	r28, r8
 100:	e4 01       	movw	r28, r8
 102:	e4 01       	movw	r28, r8
 104:	e4 01       	movw	r28, r8
 106:	e4 01       	movw	r28, r8
 108:	e4 01       	movw	r28, r8
 10a:	e4 01       	movw	r28, r8
 10c:	e4 01       	movw	r28, r8
 10e:	e4 01       	movw	r28, r8
 110:	e4 01       	movw	r28, r8
 112:	e4 01       	movw	r28, r8
 114:	e4 01       	movw	r28, r8
 116:	e4 01       	movw	r28, r8
 118:	e4 01       	movw	r28, r8
 11a:	e4 01       	movw	r28, r8
 11c:	e4 01       	movw	r28, r8
 11e:	e4 01       	movw	r28, r8
 120:	e4 01       	movw	r28, r8
 122:	e4 01       	movw	r28, r8
 124:	91 01       	movw	r18, r2
 126:	a6 01       	movw	r20, r12
 128:	bb 01       	movw	r22, r22
 12a:	d0 01       	movw	r26, r0

0000012c <__ctors_end>:
 12c:	11 24       	eor	r1, r1
 12e:	1f be       	out	0x3f, r1	; 63
 130:	cf e5       	ldi	r28, 0x5F	; 95
 132:	d4 e0       	ldi	r29, 0x04	; 4
 134:	de bf       	out	0x3e, r29	; 62
 136:	cd bf       	out	0x3d, r28	; 61
 138:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <main>
 13c:	0c 94 a0 00 	jmp	0x140	; 0x140 <_exit>

00000140 <_exit>:
 140:	f8 94       	cli

00000142 <__stop_program>:
 142:	ff cf       	rjmp	.-2      	; 0x142 <__stop_program>

Disassembly of section .text:

0000041c <__bad_interrupt>:
 41c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_set_bit_dir:

00000144 <DIO_set_bit_dir>:
            break;
        }
    case 'D':
    case 'd':
        {
            tog_bit(PORTD,pin);
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	fc 01       	movw	r30, r24
 148:	e1 54       	subi	r30, 0x41	; 65
 14a:	f1 09       	sbc	r31, r1
 14c:	e4 32       	cpi	r30, 0x24	; 36
 14e:	f1 05       	cpc	r31, r1
 150:	08 f0       	brcs	.+2      	; 0x154 <DIO_set_bit_dir+0x10>
 152:	67 c0       	rjmp	.+206    	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
 154:	e6 5d       	subi	r30, 0xD6	; 214
 156:	ff 4f       	sbci	r31, 0xFF	; 255
 158:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__tablejump2__>
 15c:	41 30       	cpi	r20, 0x01	; 1
 15e:	59 f4       	brne	.+22     	; 0x176 <DIO_set_bit_dir+0x32>
 160:	2a b3       	in	r18, 0x1a	; 26
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_set_bit_dir+0x28>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_set_bit_dir+0x24>
 170:	82 2b       	or	r24, r18
 172:	8a bb       	out	0x1a, r24	; 26
 174:	08 95       	ret
 176:	2a b3       	in	r18, 0x1a	; 26
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_set_bit_dir+0x3e>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_set_bit_dir+0x3a>
 186:	80 95       	com	r24
 188:	82 23       	and	r24, r18
 18a:	8a bb       	out	0x1a, r24	; 26
 18c:	08 95       	ret
 18e:	41 30       	cpi	r20, 0x01	; 1
 190:	59 f4       	brne	.+22     	; 0x1a8 <DIO_set_bit_dir+0x64>
 192:	27 b3       	in	r18, 0x17	; 23
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_set_bit_dir+0x5a>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	6a 95       	dec	r22
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_set_bit_dir+0x56>
 1a2:	82 2b       	or	r24, r18
 1a4:	87 bb       	out	0x17, r24	; 23
 1a6:	08 95       	ret
 1a8:	27 b3       	in	r18, 0x17	; 23
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_set_bit_dir+0x70>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_set_bit_dir+0x6c>
 1b8:	80 95       	com	r24
 1ba:	82 23       	and	r24, r18
 1bc:	87 bb       	out	0x17, r24	; 23
 1be:	08 95       	ret
 1c0:	41 30       	cpi	r20, 0x01	; 1
 1c2:	59 f4       	brne	.+22     	; 0x1da <DIO_set_bit_dir+0x96>
 1c4:	24 b3       	in	r18, 0x14	; 20
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_set_bit_dir+0x8c>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_set_bit_dir+0x88>
 1d4:	82 2b       	or	r24, r18
 1d6:	84 bb       	out	0x14, r24	; 20
 1d8:	08 95       	ret
 1da:	24 b3       	in	r18, 0x14	; 20
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_set_bit_dir+0xa2>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_set_bit_dir+0x9e>
 1ea:	80 95       	com	r24
 1ec:	82 23       	and	r24, r18
 1ee:	84 bb       	out	0x14, r24	; 20
 1f0:	08 95       	ret
 1f2:	41 30       	cpi	r20, 0x01	; 1
 1f4:	59 f4       	brne	.+22     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 1f6:	21 b3       	in	r18, 0x11	; 17
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	6a 95       	dec	r22
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_set_bit_dir+0xba>
 206:	82 2b       	or	r24, r18
 208:	81 bb       	out	0x11, r24	; 17
 20a:	08 95       	ret
 20c:	21 b3       	in	r18, 0x11	; 17
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	6a 95       	dec	r22
 21a:	e2 f7       	brpl	.-8      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 21c:	80 95       	com	r24
 21e:	82 23       	and	r24, r18
 220:	81 bb       	out	0x11, r24	; 17
 222:	08 95       	ret

Disassembly of section .text.DIO_write_bit:

00000224 <DIO_write_bit>:
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	fc 01       	movw	r30, r24
 228:	e1 54       	subi	r30, 0x41	; 65
 22a:	f1 09       	sbc	r31, r1
 22c:	e4 32       	cpi	r30, 0x24	; 36
 22e:	f1 05       	cpc	r31, r1
 230:	08 f0       	brcs	.+2      	; 0x234 <DIO_write_bit+0x10>
 232:	67 c0       	rjmp	.+206    	; 0x302 <DIO_write_bit+0xde>
 234:	e2 5b       	subi	r30, 0xB2	; 178
 236:	ff 4f       	sbci	r31, 0xFF	; 255
 238:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__tablejump2__>
 23c:	41 30       	cpi	r20, 0x01	; 1
 23e:	59 f4       	brne	.+22     	; 0x256 <DIO_write_bit+0x32>
 240:	2b b3       	in	r18, 0x1b	; 27
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_write_bit+0x28>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_write_bit+0x24>
 250:	82 2b       	or	r24, r18
 252:	8b bb       	out	0x1b, r24	; 27
 254:	08 95       	ret
 256:	2b b3       	in	r18, 0x1b	; 27
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_write_bit+0x3e>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_write_bit+0x3a>
 266:	80 95       	com	r24
 268:	82 23       	and	r24, r18
 26a:	8b bb       	out	0x1b, r24	; 27
 26c:	08 95       	ret
 26e:	41 30       	cpi	r20, 0x01	; 1
 270:	59 f4       	brne	.+22     	; 0x288 <DIO_write_bit+0x64>
 272:	28 b3       	in	r18, 0x18	; 24
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_write_bit+0x5a>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <DIO_write_bit+0x56>
 282:	82 2b       	or	r24, r18
 284:	88 bb       	out	0x18, r24	; 24
 286:	08 95       	ret
 288:	28 b3       	in	r18, 0x18	; 24
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_write_bit+0x70>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	6a 95       	dec	r22
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_write_bit+0x6c>
 298:	80 95       	com	r24
 29a:	82 23       	and	r24, r18
 29c:	88 bb       	out	0x18, r24	; 24
 29e:	08 95       	ret
 2a0:	41 30       	cpi	r20, 0x01	; 1
 2a2:	59 f4       	brne	.+22     	; 0x2ba <DIO_write_bit+0x96>
 2a4:	25 b3       	in	r18, 0x15	; 21
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_write_bit+0x8c>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	6a 95       	dec	r22
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_write_bit+0x88>
 2b4:	82 2b       	or	r24, r18
 2b6:	85 bb       	out	0x15, r24	; 21
 2b8:	08 95       	ret
 2ba:	25 b3       	in	r18, 0x15	; 21
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_write_bit+0xa2>
 2c2:	88 0f       	add	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	6a 95       	dec	r22
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_write_bit+0x9e>
 2ca:	80 95       	com	r24
 2cc:	82 23       	and	r24, r18
 2ce:	85 bb       	out	0x15, r24	; 21
 2d0:	08 95       	ret
 2d2:	41 30       	cpi	r20, 0x01	; 1
 2d4:	59 f4       	brne	.+22     	; 0x2ec <DIO_write_bit+0xc8>
 2d6:	22 b3       	in	r18, 0x12	; 18
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <DIO_write_bit+0xbe>
 2de:	88 0f       	add	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	6a 95       	dec	r22
 2e4:	e2 f7       	brpl	.-8      	; 0x2de <DIO_write_bit+0xba>
 2e6:	82 2b       	or	r24, r18
 2e8:	82 bb       	out	0x12, r24	; 18
 2ea:	08 95       	ret
 2ec:	22 b3       	in	r18, 0x12	; 18
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_write_bit+0xd4>
 2f4:	88 0f       	add	r24, r24
 2f6:	99 1f       	adc	r25, r25
 2f8:	6a 95       	dec	r22
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_write_bit+0xd0>
 2fc:	80 95       	com	r24
 2fe:	82 23       	and	r24, r18
 300:	82 bb       	out	0x12, r24	; 18
 302:	08 95       	ret

Disassembly of section .text.DIO_read_bit_u8:

00000304 <DIO_read_bit_u8>:

}



unsigned char DIO_read_bit_u8(unsigned char port ,unsigned char pin ){
 304:	0f 93       	push	r16
 306:	1f 93       	push	r17


    unsigned char x;
    switch(port){
 308:	08 2f       	mov	r16, r24
 30a:	10 e0       	ldi	r17, 0x00	; 0
 30c:	f8 01       	movw	r30, r16
 30e:	e1 54       	subi	r30, 0x41	; 65
 310:	f1 09       	sbc	r31, r1
 312:	e4 32       	cpi	r30, 0x24	; 36
 314:	f1 05       	cpc	r31, r1
 316:	08 f0       	brcs	.+2      	; 0x31a <DIO_read_bit_u8+0x16>
 318:	57 c0       	rjmp	.+174    	; 0x3c8 <DIO_read_bit_u8+0xc4>
 31a:	ee 58       	subi	r30, 0x8E	; 142
 31c:	ff 4f       	sbci	r31, 0xFF	; 255
 31e:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__tablejump2__>
    case 'A':
    case 'a':
        {
            x=read_bit(PINA,pin);
 322:	49 b3       	in	r20, 0x19	; 25
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	9c 01       	movw	r18, r24
 32a:	06 2e       	mov	r0, r22
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_read_bit_u8+0x2e>
 32e:	22 0f       	add	r18, r18
 330:	33 1f       	adc	r19, r19
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_read_bit_u8+0x2a>
 336:	84 2f       	mov	r24, r20
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	82 23       	and	r24, r18
 33c:	93 23       	and	r25, r19
 33e:	02 c0       	rjmp	.+4      	; 0x344 <DIO_read_bit_u8+0x40>
 340:	95 95       	asr	r25
 342:	87 95       	ror	r24
 344:	6a 95       	dec	r22
 346:	e2 f7       	brpl	.-8      	; 0x340 <DIO_read_bit_u8+0x3c>
 348:	98 2f       	mov	r25, r24
            break;
 34a:	3e c0       	rjmp	.+124    	; 0x3c8 <DIO_read_bit_u8+0xc4>
        }
    case 'B':
    case 'b':
        {
            x=read_bit(PINB,pin);
 34c:	46 b3       	in	r20, 0x16	; 22
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	9c 01       	movw	r18, r24
 354:	06 2e       	mov	r0, r22
 356:	02 c0       	rjmp	.+4      	; 0x35c <DIO_read_bit_u8+0x58>
 358:	22 0f       	add	r18, r18
 35a:	33 1f       	adc	r19, r19
 35c:	0a 94       	dec	r0
 35e:	e2 f7       	brpl	.-8      	; 0x358 <DIO_read_bit_u8+0x54>
 360:	84 2f       	mov	r24, r20
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	82 23       	and	r24, r18
 366:	93 23       	and	r25, r19
 368:	02 c0       	rjmp	.+4      	; 0x36e <DIO_read_bit_u8+0x6a>
 36a:	95 95       	asr	r25
 36c:	87 95       	ror	r24
 36e:	6a 95       	dec	r22
 370:	e2 f7       	brpl	.-8      	; 0x36a <DIO_read_bit_u8+0x66>
 372:	98 2f       	mov	r25, r24
            break;
 374:	29 c0       	rjmp	.+82     	; 0x3c8 <DIO_read_bit_u8+0xc4>
        }
    case 'C':
    case 'c':
        {
            x=read_bit(PINC,pin);
 376:	43 b3       	in	r20, 0x13	; 19
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	9c 01       	movw	r18, r24
 37e:	06 2e       	mov	r0, r22
 380:	02 c0       	rjmp	.+4      	; 0x386 <DIO_read_bit_u8+0x82>
 382:	22 0f       	add	r18, r18
 384:	33 1f       	adc	r19, r19
 386:	0a 94       	dec	r0
 388:	e2 f7       	brpl	.-8      	; 0x382 <DIO_read_bit_u8+0x7e>
 38a:	84 2f       	mov	r24, r20
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	82 23       	and	r24, r18
 390:	93 23       	and	r25, r19
 392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_read_bit_u8+0x94>
 394:	95 95       	asr	r25
 396:	87 95       	ror	r24
 398:	6a 95       	dec	r22
 39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_read_bit_u8+0x90>
 39c:	98 2f       	mov	r25, r24
            break;
 39e:	14 c0       	rjmp	.+40     	; 0x3c8 <DIO_read_bit_u8+0xc4>
        }
    case 'D':
    case 'd':
        {
            x=read_bit(PIND,pin);
 3a0:	40 b3       	in	r20, 0x10	; 16
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	9c 01       	movw	r18, r24
 3a8:	06 2e       	mov	r0, r22
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <DIO_read_bit_u8+0xac>
 3ac:	22 0f       	add	r18, r18
 3ae:	33 1f       	adc	r19, r19
 3b0:	0a 94       	dec	r0
 3b2:	e2 f7       	brpl	.-8      	; 0x3ac <DIO_read_bit_u8+0xa8>
 3b4:	84 2f       	mov	r24, r20
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	82 23       	and	r24, r18
 3ba:	93 23       	and	r25, r19
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_read_bit_u8+0xbe>
 3be:	95 95       	asr	r25
 3c0:	87 95       	ror	r24
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_read_bit_u8+0xba>
 3c6:	98 2f       	mov	r25, r24

    }

    return x;

}
 3c8:	89 2f       	mov	r24, r25
 3ca:	1f 91       	pop	r17
 3cc:	0f 91       	pop	r16
 3ce:	08 95       	ret

Disassembly of section .text.LED_initialize:

00000404 <LED_initialize>:



void LED_initialize(unsigned char port,unsigned char pin_num){
	
		DIO_set_bit_dir(port,pin_num,1);
 404:	41 e0       	ldi	r20, 0x01	; 1
 406:	0e 94 a2 00 	call	0x144	; 0x144 <__data_load_end>
 40a:	08 95       	ret

Disassembly of section .text.LED_on:

0000040c <LED_on>:
}

void LED_on(unsigned char port,unsigned char pin_num){
	
	DIO_write_bit(port,pin_num,1);
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 412:	08 95       	ret

Disassembly of section .text.LED_off:

00000414 <LED_off>:
}


void LED_off(unsigned char port,unsigned char pin_num){
	
	DIO_write_bit(port,pin_num,0);
 414:	40 e0       	ldi	r20, 0x00	; 0
 416:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 41a:	08 95       	ret

Disassembly of section .text.main:

000003d0 <main>:
#include "LED.h"
#include "DIO/DIO.h"

int main(void)
{
	LED_initialize('A',0);
 3d0:	60 e0       	ldi	r22, 0x00	; 0
 3d2:	81 e4       	ldi	r24, 0x41	; 65
 3d4:	0e 94 02 02 	call	0x404	; 0x404 <LED_initialize>
 3d8:	04 c0       	rjmp	.+8      	; 0x3e2 <main+0x12>
	
    while(1)
    {
		while (DIO_read_bit_u8('C',0))
		{
			LED_on('A',0);
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	81 e4       	ldi	r24, 0x41	; 65
 3de:	0e 94 06 02 	call	0x40c	; 0x40c <LED_on>
{
	LED_initialize('A',0);
	
    while(1)
    {
		while (DIO_read_bit_u8('C',0))
 3e2:	60 e0       	ldi	r22, 0x00	; 0
 3e4:	83 e4       	ldi	r24, 0x43	; 67
 3e6:	0e 94 82 01 	call	0x304	; 0x304 <DIO_read_bit_u8>
 3ea:	81 11       	cpse	r24, r1
 3ec:	f6 cf       	rjmp	.-20     	; 0x3da <main+0xa>
		{
			LED_on('A',0);
		}
		LED_off('A',0);
 3ee:	60 e0       	ldi	r22, 0x00	; 0
 3f0:	81 e4       	ldi	r24, 0x41	; 65
 3f2:	0e 94 0a 02 	call	0x414	; 0x414 <LED_off>

        //TODO:: Please write your application code 
    }
 3f6:	f5 cf       	rjmp	.-22     	; 0x3e2 <main+0x12>

Disassembly of section .text.libgcc:

000003f8 <__tablejump2__>:
 3f8:	ee 0f       	add	r30, r30
 3fa:	ff 1f       	adc	r31, r31
 3fc:	05 90       	lpm	r0, Z+
 3fe:	f4 91       	lpm	r31, Z
 400:	e0 2d       	mov	r30, r0
 402:	09 94       	ijmp
